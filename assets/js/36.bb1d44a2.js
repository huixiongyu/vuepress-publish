(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{422:function(s,n,t){"use strict";t.r(n);var a=t(54),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"《数据结构与算法javascript描述》"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#《数据结构与算法javascript描述》"}},[s._v("#")]),s._v(" 《数据结构与算法JavaScript描述》")]),s._v(" "),t("p",[s._v("JavaScript数组和字符串等内置了很多API，可惜没有强大的内置库（类似C++的STL），大部分算法实现需要自己手写。基于这种缺陷，对JavaScript深入地数据结构编程应该是个稀缺能力，不妨从这本书启发然后加深学习。")]),s._v(" "),t("h2",{attrs:{id:"第1章-编程环境和模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第1章-编程环境和模型"}},[s._v("#")]),s._v(" 第1章-编程环境和模型")]),s._v(" "),t("p",[s._v("声明的变量都是局部变量。")]),s._v(" "),t("p",[s._v("JavaScript中，函数的参数传递方式都是按值传递，没有按引用传递的参数。但是JavaScript中有保存引用的对象，比如数组，它们是按引用传递的。")]),s._v(" "),t("p",[s._v("在主程序中，如果在函数外定义一个变量，那么该变量拥有全局作用域，这是指可以在包括函数体内的程序的任何部分访问该变量。")]),s._v(" "),t("p",[s._v("当一个函数被递归调用，在递归没有完成时，函数的计算结果暂时被挂起。")]),s._v(" "),t("h2",{attrs:{id:"第2章-数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第2章-数组"}},[s._v("#")]),s._v(" 第2章-数组")]),s._v(" "),t("p",[t("strong",[s._v("对数组的操作：")])]),s._v(" "),t("ul",[t("li",[s._v("indexOf()")]),s._v(" "),t("li",[s._v("lastIndexOf()")]),s._v(" "),t("li",[s._v("join()")]),s._v(" "),t("li",[s._v("toString()")]),s._v(" "),t("li",[s._v("concat()")]),s._v(" "),t("li",[s._v("splice()")]),s._v(" "),t("li",[s._v("forEach()")]),s._v(" "),t("li",[s._v("every()")]),s._v(" "),t("li",[s._v("some()")]),s._v(" "),t("li",[s._v("reduce()")]),s._v(" "),t("li",[s._v("map()")]),s._v(" "),t("li",[s._v("filter()")])]),s._v(" "),t("p",[s._v("这些数字索引在内部被转换为字符串类型，这是因为JavaScript对象中的属性名必须是字符串。数组在JavaScript中知识一种特殊技的对象，所以效率上不如其他语言中的数组高。")]),s._v(" "),t("h3",{attrs:{id:"创建数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建数组"}},[s._v("#")]),s._v(" 创建数组")]),s._v(" "),t("ol",[t("li",[s._v("通过[] 声明。  var numbers = [];")]),s._v(" "),t("li",[s._v("在[] 中放入一组元素。 var numbers = [1, 2, 3, 4, 5];")]),s._v(" "),t("li",[s._v("构造函数中传入一组元素。var numbers = new Array(1, 2, 3, 4, 5);")]),s._v(" "),t("li",[s._v("构造函数中传入一个参数，用来表示数组的长度。var numbers = new Array(10);")])]),s._v(" "),t("p",[s._v("推荐使用 []")]),s._v(" "),t("p",[s._v("JavaScript中数组也是对象，数组的长度可以任意增长，超出其创建时指定的长度。length属性反映的是当前数组中元素的个数，使用它，可以确保循环遍历了数组中的所有元素。")]),s._v(" "),t("p",[s._v("调用字符串对象的split()方法也可以生成数组。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split(' ');\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("当把一个数组赋给另外一个数组时，只是为被赋值的数组增加了一个新的引用。")]),s._v(" "),t("p",[s._v("这种行为被称为浅复制，新数组依然指向原来的数组。")]),s._v(" "),t("h3",{attrs:{id:"存取函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存取函数"}},[s._v("#")]),s._v(" 存取函数")]),s._v(" "),t("p",[s._v("indexOf()函数是最常用的存取函数之一，用来查找传进来的参数在目标数组中是否存在。")]),s._v(" "),t("p",[s._v("如果数组中包含多个相同的元素，indexOf()函数总是返回第一个与参数相同的元素的索引。有另外一个功能与之类似的函数：lastIndexOf()")]),s._v(" "),t("p",[s._v("有两个方法可以将数组转化为字符串：join()和toString()。这两个方法都返回一个包含数组所有元素的字符串，各元素之间用逗号分隔开。")]),s._v(" "),t("p",[s._v("concat()和splice()方法允许通过已有数组创建新数组。concat方法可以合并多个数组创建一个新数组，splice()方法截取一个数组的子集创建一个新数组。")]),s._v(" "),t("p",[s._v("concat()该方法的发起者是一个数组，参数是另一个数组。作为参数的数组，其中的所有元素都被连接到调用concat()方法的数组后面。")]),s._v(" "),t("p",[s._v("splice()方法从现有数组里截取一个新数组。该方法的第一个参数是截取的起始索引，第二个参数是截取的长度。")]),s._v(" "),t("p",[s._v("splice()方法还有其他用法，比如为一个数组添加或移除元素。")]),s._v(" "),t("p",[s._v("push()方法会将一个元素添加到数组末尾。")]),s._v(" "),t("p",[s._v("unshift()方法可以将元素添加在数组的开头。")]),s._v(" "),t("p",[s._v("unshift()方法展示了可以通过一次调用，为数组添加多个元素。")]),s._v(" "),t("h3",{attrs:{id:"删除元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除元素"}},[s._v("#")]),s._v(" 删除元素")]),s._v(" "),t("p",[s._v("使用pop()方法可以删除数组末尾的元素。")]),s._v(" "),t("p",[s._v("shift()方法可以删除数组的第一个元素。")]),s._v(" "),t("p",[s._v("pop()和shift()方法都将删掉的元素作为方法的返回值返回。")]),s._v(" "),t("p",[s._v("使用splice()方法为数组添加元素，需提供如下参数：")]),s._v(" "),t("ol",[t("li",[s._v("起始索引（也就是你希望开始添加元素的地方）；")]),s._v(" "),t("li",[s._v("需要删除的元素个数（添加元素时该参数设为0）；")]),s._v(" "),t("li",[s._v("想要添加进数组的元素。")])]),s._v(" "),t("p",[s._v("要插入数组的元素不必组织成一个数组，它可以是任意的元素序列。")]),s._v(" "),t("h3",{attrs:{id:"数组排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组排序"}},[s._v("#")]),s._v(" 数组排序")]),s._v(" "),t("p",[s._v("sort()方法是按照字典顺序对元素进行排序的，因此它假定元素都是字符串类型。即使元素是数字类型，也被认为是字符串类型。为了让sort()方法也能排序数字类型的元素，可以在调用方法时传入一个大小比较函数，排序时，sort()方法将会根据该函数比较数组中两个元素的大小，从而决定整个数组的顺序。")]),s._v(" "),t("h3",{attrs:{id:"迭代器方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代器方法"}},[s._v("#")]),s._v(" 迭代器方法")]),s._v(" "),t("p",[s._v("forEach()方法接受一个函数作为参数，对数组中的每个元素使用该函数。")]),s._v(" "),t("p",[s._v("every()方法接受一个返回值为布尔类型的函数，对数组中的每个元素使用该函数。如果对于所有的元素，该函数均返回true，则该方法返回true。")]),s._v(" "),t("p",[s._v("some()方法也接受一个返回值为布尔类型的函数，只要有一个元素使得该函数返回true，该方法就返回true。")]),s._v(" "),t("p",[s._v("reduce()方法接受一个函数，返回一个值。该方法会从一个累加值开始，不断对累加值和数组中的后续元素调用该函数，知道数组中的最后一个元素，最后返回得到的累加值。")]),s._v(" "),t("p",[s._v("JavaScript还提供了reduceRight()方法和reduce()方法不同，它是从右到左执行。")]),s._v(" "),t("h3",{attrs:{id:"生成新数组的迭代器方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成新数组的迭代器方法"}},[s._v("#")]),s._v(" 生成新数组的迭代器方法")]),s._v(" "),t("p",[s._v("有两个迭代器方法可以产生新数组：map()和filter。map()和forEach()有点儿像，对数组中的每个元素使用某个函数。两者的区别是map()返回一个新的数组，该数组的元素是对原有元素应用某个函数得到的结果。")]),s._v(" "),t("p",[s._v("filter()和every()类似，传入一个返回值为布尔类型的函数。和every()方法不同的是，当对数组中的所有元素应用该函数，结果均为true时，该方法并不返回true,而是返回一个新数组，该数组包含应用该函数后结果为true的元素。")]),s._v(" "),t("h3",{attrs:{id:"二维和多维数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二维和多维数组"}},[s._v("#")]),s._v(" 二维和多维数组")]),s._v(" "),t("p",[s._v("在JavaScript中创建二维数组")]),s._v(" "),t("h2",{attrs:{id:"第3章-列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第3章-列表"}},[s._v("#")]),s._v(" 第3章-列表")]),s._v(" "),t("p",[s._v("列表的抽象数据类型定义：")]),s._v(" "),t("ul",[t("li",[s._v("listSize属性：列表的元素个数")]),s._v(" "),t("li",[s._v("pos属性：列表的当前位置")]),s._v(" "),t("li",[s._v("length属性：返回列表中元素的个数")]),s._v(" "),t("li",[s._v("clear方法：清空列表中的所有元素")]),s._v(" "),t("li",[s._v("toString方法：返回列表的字符串形式")]),s._v(" "),t("li",[s._v("getElement方法：返回当前位置的元素")]),s._v(" "),t("li",[s._v("insert方法：在现有元素后插入新元素")]),s._v(" "),t("li",[s._v("append方法：在列表的末尾添加新元素")]),s._v(" "),t("li",[s._v("remove方法：从列表中删除元素")]),s._v(" "),t("li",[s._v("front方法：将列表的当前位置移动到第一个元素")]),s._v(" "),t("li",[s._v("end方法：将列表的当前位置移动到最后一个元素")]),s._v(" "),t("li",[s._v("prev方法：将当前位置后移一位")]),s._v(" "),t("li",[s._v("next方法：将当前位置前移一位")]),s._v(" "),t("li",[s._v("hasNext方法：判断后一位")]),s._v(" "),t("li",[s._v("hasPrev方法：判断前一位")]),s._v(" "),t("li",[s._v("currPos方法：返回列表的当前位置")]),s._v(" "),t("li",[s._v("moveTo方法：将当前位置移动到指定位置")])]),s._v(" "),t("div",{staticClass:"language-{ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function List() {\n\tthis.listSize = 0;\n\tthis.pos = 0;\n\tthis.dataStore = [];\n\tthis.clear = clear();\n\tthis.find = find();\n\tthis.toString = toString();\n\tthis.insert = insert;\n\tthis.append = append;\n\tthis.remove = remove;\n\tthis.front = front;\n\tthis.end = end;\n\tthis.prev = prev;\n\tthis.next = next;\n\tthis.hasNext;\n\tthis.hasPrev;\n\tthis.length = length;\n\tthis.currPos = currPos;\n\tthis.moveTo = moveTo;\n\tthis.getElement = getElement;\n\tthis.contains = contains;\n}\n\nfunction find(element) {\n\tfor(var i = 0;i < this.dataStore.length; ++i) {\n\t\tif (this.dataStore[i] == element) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction remove(element) {\n\tvar foundAt = this.find(element);\n\tif (foundAt > -1) {\n\t\tthis.dataStore.splice(fountAt, 1);\n\t\t--this.listSize;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction length() {\n\treturn this.listSize;\n}\n\nfunction toString() {\n\treturn this.dataStore;\n}\n\nfunction insert(element, after) {\n\tvar insertPos = this.find(after);\n\tif (insertPos > -1) {\n\t\tthis.dataStore.splice(insertPos + 1, 0, element);\n\t\t++this.listSize;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction clear() {\n\tdelete this.dataStore;\n\tthis.dataStore.length = 0;\n\tthis.listSize = this.pos = 0;\n}\n\nfunction contains(element) {\n\tfor (var i = 0;i < this.dataStore.length; ++i) {\n\t\tif (this.dataStore[i] == element) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction front() {\n\tthis.pos = 0;\n}\n\nfunction end() {\n\tthis.pos = this.listSize - 1;\n}\n\nfunction prev() {\n\t--this.pos;\n}\n\nfunction next() {\n\tif (this.pos < this.listSize) {\n\t\t++this.pos;\n\t}\n}\n\nfunction currPos() {\n\treturn this.pos;\n}\n\nfunction moveTo(position) {\n\tthis.pos = position;\n}\n\nfunction getElement() {\n\treturn this.dataStore[this.pos];\n}\n\nfunction hasNext() {\n\treturn this.pos < this.listSize;\n}\n\nfunction hasPrev() {\n\treturn this.pos >= 0;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br")])]),t("h2",{attrs:{id:"第4章-栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第4章-栈"}},[s._v("#")]),s._v(" 第4章-栈")]),s._v(" "),t("p",[s._v("栈被称为一种后入先出（LIFO, last-in-first-out）的数据结构。")]),s._v(" "),t("p",[s._v("对栈的两种主要操作是将一个元素压入栈和将一个元素弹出栈。入栈使用push()方法，出栈使用pop()方法。")]),s._v(" "),t("h3",{attrs:{id:"stack类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stack类"}},[s._v("#")]),s._v(" Stack类")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Stack() {\n\tthis.dataStore = [];\n\tthis.top = 0;\n\tthis.push = push;\n\tthis.pop = pop;\n\tthis.peek = peek;\n\tthis.clear = clear;\n\tthis.length = length;\n}\n\nfunction push(element) {\n\tthis.dataStore[this.top++] = element;\n}\n\nfunction peek() {\n\treturn this.dataStore[this.top - 1];\n}\n\nfunction top() {\n\treturn this.dataStore[--this.top];\n}\n\nfunction clear() {\n\tthis.top = 0;\n}\n\nfunction length() {\n\treturn this.top;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("p",[s._v("实战：")]),s._v(" "),t("h3",{attrs:{id:"判断给定字符是否回文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#判断给定字符是否回文"}},[s._v("#")]),s._v(" 判断给定字符是否回文")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function isPalindrome(word) {\n\tvar s = new Stack();\n\tfor (var i = 0;i < word.length; ++i) {\n\t\ts.push(word[i]);\n\t}\n\tvar reword = "";\n\twhile(s.length() > 0) {\n\t\treword += s.pop();\n\t}\n\tif (word === reword) return true;\n\telse return fasle;\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"使用栈模拟递归调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用栈模拟递归调用"}},[s._v("#")]),s._v(" 使用栈模拟递归调用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function fact(n) {\n\tvar s = new Stack();\n\twhile(n > 1) {\n\t\ts.push(n--);\n\t}\n\tvar product = 1;\n\twhile(s.length() > 0) {\n\t\tproduct *= s.pop();\n\t}\n\treturn product;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"练习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[s._v("#")]),s._v(" 练习")]),s._v(" "),t("ol",[t("li",[s._v("编写一个函数，该函数接受一个算术表达式作为参数，返回括号缺失的位置。下面是一个括号不匹配的算术表达式的例子：2.3+23/12+（3.14159×0.24。")]),s._v(" "),t("li",[s._v("使用两个栈，一个用来存储操作数，另外一个用来存储操作符，设计并实现一个JavaScript函数，该函数可以将中缀表达式转换为后缀表达式，然后利用栈对该表达式求值。")])]),s._v(" "),t("h2",{attrs:{id:"第5章-队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第5章-队列"}},[s._v("#")]),s._v(" 第5章-队列")]),s._v(" "),t("p",[s._v("队列是一种列表，不同的是队列只能在队尾插入元素，在队首删除元素。")]),s._v(" "),t("p",[s._v("队列是一种先进先出（First-In-First-Out, FIFO）的数据结构。")]),s._v(" "),t("p",[s._v("JavaScript中的数组具有其他编程语言中没有的优点，数组的push()方法可以在数组末尾加入元素，shift()方法则可删除数组的第一个元素。")]),s._v(" "),t("h3",{attrs:{id:"queue类的定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#queue类的定义"}},[s._v("#")]),s._v(" Queue类的定义")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function Queue() {\n\tthis.dataStore = [];\n\tthis.enqueue = enqueue;\n\tthis.dequeue = dequeue;\n\tthis.front = front;\n\tthis.back = back;\n\tthis.toString = toString;\n\tthis.empty = empty;\n}\n\nfunction enqueue(element) {\n\tthis.dataStore.push(element);\n}\n\nfunction dequeue() {\n\treturn this.dataStore[0];\n}\n\nfunction back() {\n\treturn this.dataStore[this.dataStore.length - 1];\n}\n\nfunction toString() {\n\tvar retStr = "";\n\tfor(var i = 0;i < this.dataStore.length; ++i) {\n\t\tretStr += this.dataStore[i] + "\\n";\n\t}\n\treturn resStr;\n}\n\nfunction empty() {\n\tif(this.dataStore.length == 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br")])]),t("h3",{attrs:{id:"舞伴分配问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#舞伴分配问题"}},[s._v("#")]),s._v(" 舞伴分配问题")]),s._v(" "),t("p",[s._v("舞池中男女各一队，两队分别出列组成的男女组成舞伴。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function Dancer(name, sex) {\n\tthis.name = name;\n\tthis.sex = sex;\n}\n\nfunction getDancers(males, females) {\n\tvar names = read("dancers.txt").split("\\n");\n\tfor(var i = 0;i < names.length; ++i) {\n\t\tnames[i] = names[i].trim();\n\t}\n\tfor(var i = 0;i < names.length; ++i) {\n\t\tvar dancer = names[i].split(" ");\n\t\tvar sex = dancer[0];\n\t\tvar name = dancer[1];\n\t\tif (sex == "F") {\n\t\t\tfemales.enqueue(new Dancer(name, sex));\n\t\t} else {\n\t\t\tmales.enqueue(new Dancer(name, sex));\n\t\t}\n\t}\n}\n\n// 匹配结果\nfunction dance(males, females) {\n\tprint("The dance partners are: \\n");\n\twhile(!females.empty() && !males.empty()) {\n\t\tperson = females.dequeue();\n\t\tputstr("Female dancer is :" + person.name);\n\t\tperson = males.dequeue();\n\t\tprint(" and the male dancer is : " + person.name);\n\t}\n\tprint();\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("h2",{attrs:{id:"练习-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习-2"}},[s._v("#")]),s._v(" 练习")]),s._v(" "),t("ol",[t("li",[s._v("基数排序")]),s._v(" "),t("li",[s._v("优先队列")]),s._v(" "),t("li",[s._v("双向队列")]),s._v(" "),t("li",[s._v("判断单词回文")])]),s._v(" "),t("h2",{attrs:{id:"第6章-链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第6章-链表"}},[s._v("#")]),s._v(" 第6章-链表")]),s._v(" "),t("p",[s._v("链表是由一组节点组成的集合。每个节点都使用一个对象的引用指向它的后继。指向另一个节点的引用叫做链。")]),s._v(" "),t("p",[s._v("链表的尾元素指向一个null节点。")]),s._v(" "),t("p",[s._v("许多链表的实现都在链表最前面有一个特殊节点，叫做头节点。")]),s._v(" "),t("p",[s._v("链表中插入一个节点的效率很高。向链表中插入一个节点，需要修改它前面的节点（前驱），使其指向新加入的节点，而新加入的节点则指向原来前驱指向的节点。")]),s._v(" "),t("p",[s._v("从链表中删除一个元素也很简单。将待删除元素的前驱节点指向待删除元素的后继节点，同时将待删除元素指向null，元素就删除成功了。")]),s._v(" "),t("h2",{attrs:{id:"node类和linkedlist类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node类和linkedlist类"}},[s._v("#")]),s._v(" Node类和LinkedList类")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function Node(element) {\n\tthis.element = element;\n\tthis.next = null;\n}\n\nfunction LList() {\n\tthis.head = new Node("head");\n\tthis.find = find;\n\tthis.insert = insert;\n\tthis.display = display;\n\tthis.findPrevious = findPrevious;\n\tthis.remove = remove;\n}\n\nfunction remove() {\n\tvar prevNode = this.findPrevious(item);\n\tif(!(prevNode.next == null)) {\n\t\tprevNode.next = prevNode.next.next;\n\t}\n}\n\nfunction findPrevious(item) {\n\tvar currNode = this.head;\n\twhile(!(currNode.next == null) && (currNode.next.element != item)) {\n\t\tcurrNode = currNode.next;\n\t}\n\treturn currNode;\n}\n\nfunction display() {\n\tvar currNode = this.head;\n\twhile(!(currNode.next == null)) {\n\t\tprint(currNode.next.element);\n\t\tcurrNode = currNode.next;\n\t}\n}\n\nfunction find(item) {\n\tvar currNode = this.head;\n\twhile(currNode.element != item) {\n\t\tcurrNode = currNode.next;\n\t}\n\treturn currNode;\n}\n\nfunction insert(newElement, item) {\n\tvar newNode = new Node(newElement);\n\tvar current = this.find(item);\n\tnewNode.next = current.next;\n\tcurrent.next = newNode;\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br")])]),t("h3",{attrs:{id:"双向链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双向链表"}},[s._v("#")]),s._v(" 双向链表")]),s._v(" "),t("p",[s._v("增加一个previous")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Node(element) {\n\tthis.element = element;\n\tthis.next = null;\n\tthis.previous = null;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("插入")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function insert(newElement, item) {\n\tvar newNode = new Node(newElement);\n\tvar current = this.find(item);\n\tnewNode.next = current.next;\n\tnewNode.previous = current;\n\tcurrent.next = newNode;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("双向链表的remove()方法比单向链表的效率更高，因为不需要再查找前驱节点了。首先需要在链表中找出存储待删除数据的节点，然后设置该节点前驱的next属性，使其指向待删除节点的后继；设置该节点后继的previous属性，使其指向待删除节点的前驱。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function remove(item) {\n\tvar currNode = this.find(item);\n\tif (!(currNode.next == null)) {\n\t\tcurrNode.previous.next = currNode.next;\n\t\tcurrNode.next.previous = currNode.previous;\n\t\tcurrNode.next = null;\n\t\tcurrNode.previous = null;\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("增加查找最后节点的方法，免除从前往后遍历")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function findLast() {\n\tvar currNode = this.head;\n\twhile(!(currNode.next == null)) {\n\t\tcurrNode = currNode.next;\n\t}\n\treturn currNode;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("反序显示双链表：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function dispReverse() {\n\tvar currNode = this.head;\n\tcurrNode = this.findLast();\n\twhile(!(currNode.previous == null)) {\n\t\tprint(currNode.elment);\n\t\tcurrNode = currNode.previous;\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"循环链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#循环链表"}},[s._v("#")]),s._v(" 循环链表")]),s._v(" "),t("p",[s._v("如果你希望可以从后向前遍历链表，但是又不想付出额外代价来创建一个双向链表，那么就需要使用循环链表。从循环链表的尾节点向后移动，就等于从后向前遍历链表。")]),s._v(" "),t("p",[s._v("修改构造函数:"),t("strong",[s._v("只需要修改一处，就将单向链表变成了循环链表。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function LList() {\n\tthis.head = new Node("head");\n\tthis.head.next = this.head;\n\tthis.find = find;\n\tthis.insert = insert;\n\tthis.display = display;\n\tthis.findPrevious = findPrevious;\n\tthis.remove = remove;\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("但是display()需要修改，原来的方式在循环链表里会陷入死循环。while循环的循环条件需要修改，需要检查头节点，当循环到头节点时退出循环。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function display() {\n\tvar currNode = new Node();\n\twhile(!(currNode.next == null) && !(currNode.next.element == "head")) {\n\t\tprint(currNode.next.element);\n\t\tcurrNode = currNode.next;\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"练习-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习-3"}},[s._v("#")]),s._v(" 练习")]),s._v(" "),t("ol",[t("li",[s._v("advance(n)： 在链表中向前移动n个节点")]),s._v(" "),t("li",[s._v("back(n)：在双向链表中向后移动n个节点")]),s._v(" "),t("li",[s._v("show()：只显示当前节点。")]),s._v(" "),t("li",[s._v("约瑟夫环")])]),s._v(" "),t("h2",{attrs:{id:"第7章-字典"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第7章-字典"}},[s._v("#")]),s._v(" 第7章-字典")]),s._v(" "),t("p",[s._v("Dictionay类的基础是Array类，而不是Object类。")]),s._v(" "),t("h3",{attrs:{id:"dictionary类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dictionary类"}},[s._v("#")]),s._v(" Dictionary类")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Dictionary() {\n\tthis.add = add;\n\tthis.dataStore = new Array();\n\tthis.find = find;\n\tthis.remove = remove;\n\tthis.showAll = showAll;\n}\n\nfunction add(key, value) {\n\tthis.dataStore[key] = value;\n}\n\nfunction find(key) {\n\treturn this.dataStore[key];\n}\n\nfunction remove(key) {\n\tdelete this.dataStore[key];\n}\n\nfinction showAll() {\n\tvar datakeys = Array.prototype.splice.call(object.keys(this.dataStore));\n}\n\nfunction count() {\n\tvar n = 0;\n\tfor(var key in Object.keys(this.dataStore)) {\n\t\t++n;\n\t}\n\treturn n;\n}\n\nfunction clear() {\n\tfor(var key in Object.keys(this.dataStore)) {\n\t\tdelete this.dataStore[key];\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br")])]),t("p",[s._v("统计字典属性的个数，为什么不使用length属性？这是因为当键的类型为字符串时，length属性就不管用了。")]),s._v(" "),t("p",[t("strong",[s._v("Amazing!!!")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('var nums = new Array();\nnums[0] = 1;\nnums[1] = 2;\nprint(nums.length); // 显示2\nvar pbook = new Array();\npbook["David"] = 1;\npbook["Jenny"] = 2;\nprint(pbook.length); // 显示0\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("排序：")]),s._v(" "),t("p",[s._v("从数组datastore拿到键后，调用sort()方法对键重新排了序。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function showAll() {\n\tfor(var key in Object.keys(this.dataStore).sort()) {\n\t\tprint(key + "->" + this.dataStore[key]);\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"第8章-散列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第8章-散列"}},[s._v("#")]),s._v(" 第8章-散列")]),s._v(" "),t("h3",{attrs:{id:"hashtable类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashtable类"}},[s._v("#")]),s._v(" HashTable类")]),s._v(" "),t("div",{staticClass:"language-{ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function HashTable() {\n\tthis.table = new Array(137);\n\tthis.simpleHash = simpleHash;\n\tthis.betterHash = betterhash;\n\tthis.showDistro = showDistro;\n\tthis.put = put;\n\t// this.get = get;\n}\n\nfunction put(data) {\n\tvar pos = this.betterHash(data);\n\tthis.table[pos] = data;\n}\n\nfunction simpleHash(data) {\n\tvar total = 0;\n\tfor( var i = 0; i < data.length; ++i) {\n\t\ttotal += data.chatCodeAt(i);\n\t}\n\tprint("Hash value: " + data + "->" + total);\n\treturn total % this.table.length;\n}\n\nfunction showDistro() {\n\tvar n = 0;\n\tfor( var i = 0;i < this.table.length; ++i) {\n\t\tif(this.table[i] != undefined) {\n\t\t\tprint(i + ":" + this.table[i]);\n\t\t}\n\t}\n}\n\nfunction betterHash(string) {\n\tconst H = 37;\n\tvar total = 0;\n\tfor(var i = 0;i < string.length; i++) {\n\t\ttotal += H * total + string.charCodeAt(i);\n\t}\n\ttotal = total % this.table.length;\n\tif (total < 0) {\n\t\ttotal += this.table.length - 1;\n\t}\n\treturn parseInt(total);\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br")])]),t("h3",{attrs:{id:"碰撞处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#碰撞处理"}},[s._v("#")]),s._v(" 碰撞处理")]),s._v(" "),t("ol",[t("li",[s._v("开链法")]),s._v(" "),t("li",[s._v("线性探测法")])]),s._v(" "),t("h2",{attrs:{id:"第9章-集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第9章-集合"}},[s._v("#")]),s._v(" 第9章-集合")]),s._v(" "),t("p",[s._v("集合（set）是一种包含不同元素的数据结构。")]),s._v(" "),t("p",[s._v("集合的两个最重要特性是：首先，集合中的成员是无序的；其次，集合中不允许相同成员存在。")]),s._v(" "),t("p",[s._v("对集合的操作：")]),s._v(" "),t("ol",[t("li",[s._v("并集：将两个集合中的成员进行合并，得到一个新集合。")]),s._v(" "),t("li",[s._v("交集：两个集合中共同存在的成员组成一个新的集合。")]),s._v(" "),t("li",[s._v("补集属于一个集合而不属于另一个集合的成员组成的集合。")])]),s._v(" "),t("h3",{attrs:{id:"set类的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set类的实现"}},[s._v("#")]),s._v(" Set类的实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Set() {\n\tthis.dataStore = [];\n\tthis.add = add;\n\tthis.remove = remove;\n\tthis.size = size;\n\tthis.union = union;\n\tthis.intersect = intersect;\n\tthis.subset = subset;\n\tthis.difference = difference;\n\tthis.show = show;\n}\n\nfunction add(data) {\n\tif (this.dataStore.indexOf(data) < 0) {\n\t\tthis.dataStore.push(data);\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction remove(data) {\n\tvar pos = this.dataStore.indexOf(data);\n\tif (pos > -1) {\n\t\tthis.dataStore.splice(pos, 1);\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction show() {\n\treturn this.dataStore;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("h3",{attrs:{id:"更多集合操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更多集合操作"}},[s._v("#")]),s._v(" 更多集合操作")]),s._v(" "),t("p",[s._v("定义union()、subset()和difference()方法。")]),s._v(" "),t("p",[s._v("union()实现：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 判断是否包含\nfunction contains(data) {\n\tif (this.dataStore.indexOf(data) > -1) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunciton union(set) {\n\tvar tempSet = new Set();\n\tfor(var i = 0; i < this.dataStore.length; ++i){\n\t\ttempSet.add(this.dataStore[i]);\n\t}\n\tfor(var i = 0; i < set.dataStore.length; ++i) {\n\t\tif(!tempSet.contains(set.dataStore[i])) {\n\t\t\ttempSet.dataStore.push(set.dataStore[i]);\n\t\t}\n\t}\n\treturn tempSet;\n }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("intersect()实现：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function intersect(set) {\n\tvar tempSet = new Set();\n\tfor(var i = 0; i < this.dataStore.length; ++i) {\n\t\tif (!set.contains(this.dataStore[i])) {\n\t\t\ttempSet.dataStore.push(set.dataStore[i]);\n\t\t}\n\t}\n\treturn tempSet;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("subset()实现:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 判断是否属于子集\nfunction subset() {\n\tif (this.size() > set.size()) {\n\t\treturn false;\n\t} else {\n\t\tfor(var member in this.dataStore) {\n\t\t\tif(!set.contains(member)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction size() {\n\treturn this.dataStore.length;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("最后一个操作是difference()，该方法返回一个新集合，该集合包含的是那些属于第一个集合但不属于第二个集合的成员。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function difference(set) {\n\tvar tempSet = new Set();\n\tfor( var i = 0; i < this.dataStore.length; ++i) {\n\t\tif (!set.contains(this.dataStore[i])) {\n\t\t\ttempSet.add(this.dataStore[i]);\n\t\t}\n\t}\n\treturn tempSet;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"练习-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习-4"}},[s._v("#")]),s._v(" 练习")]),s._v(" "),t("ol",[t("li",[s._v("修改Set类，使里面的元素按顺序存储。写一段测试代码来测试你的修改。")]),s._v(" "),t("li",[s._v("修改Set类，将存储方式从数组替换为链表。写一段测试代码来测试你的修改。")]),s._v(" "),t("li",[s._v("为Set类增加一个higher(element)方法，该方法返回比传入元素大的元素中最小的那个。写一段测试代码来测试这个方法。")]),s._v(" "),t("li",[s._v("为Set类增加一个lower(element)方法，该方法返回比传入元素小的元素中最大的那个。写一段测试代码来测试这个方法。")])]),s._v(" "),t("h2",{attrs:{id:"第10章-二叉树和二叉查找树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第10章-二叉树和二叉查找树"}},[s._v("#")]),s._v(" 第10章-二叉树和二叉查找树")]),s._v(" "),t("p",[s._v("树是计算机科学中经常用到的一种数据结构。树是一种非线性的数据结构，以分层的方式存储数据。树被用来存储具有层级关系的数据，比如文件系统中的文件；树还被用来存储有序列表。")]),s._v(" "),t("h3",{attrs:{id:"实现二叉查找树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现二叉查找树"}},[s._v("#")]),s._v(" 实现二叉查找树")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function Node(data, left, right) {\n\tthis.data = data;\n\tthis.left = left;\n\tthis.right = right;\n\tthis.show = show;\n}\n\nfunction show() {\n\treturn this.data;\n}\n\nfunction BST() {\n\tthis.root = null;\n\tthis.insert = insert;\n\tthis.inOrder = inOrder;\n}\n\nfunction insert(data) {\n\tvar n = new Node(data, null, null);\n\tif (this.root == null) {\n\t\tthis.root = n;\n\t} else {\n\t\tvar current = this.root;\n\t\tvar parent;\n\t\twhile(true) {\n\t\t\tparent = current;\n\t\t\tif (data < current.data) {\n\t\t\t\tcurrent = current.left;\n\t\t\t\tif(current == null) {\n\t\t\t\t\tparent.left = n;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrent = current.right;\n\t\t\t\tif (current == null) {\n\t\t\t\t\tparent.right = n;\n                    break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// 中序遍历\nfunction inOder(node) {\n\tif(!(node == null)) {\n\t\tinOrder(node.left);\n\t\tputstr(node.show() + " ");\n\t\tinOrder(node.right);\n\t}\n}\n\n// 先序遍历\nfunction preOrder(node) {\n\tif(!(node == null)) {\n\t\tputstr(nodw.show() + " ");\n\t\tpreOrder(node.left);\n\t\tpreOrder(node.right);\n\t}\n}\n\n// 后序遍历\nfunction postOrder(node) {\n\tif(!(node == null)) {\n\t\tpostOrder(node.left);\n\t\tpostOrder(node.right);\n\t\tputstr(node.show() + " ");\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br")])]),t("h3",{attrs:{id:"在二叉树上进行查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在二叉树上进行查找"}},[s._v("#")]),s._v(" 在二叉树上进行查找")]),s._v(" "),t("ol",[t("li",[s._v("查找给定值")]),s._v(" "),t("li",[s._v("查找最小值")]),s._v(" "),t("li",[s._v("查找最大值")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function getMin() {\n\tvar current = this.root;\n\twhile(!(current.left == null)) {\n\t\tcurrent = current.left;\n\t}\n\treturn current.data;\n}\n\nfunction getMax() {\n\tvar current = this.root;\n\twhile(!(current.right == null)) {\n\t\tcurrent = current.right;\n\t}\n\treturn current.data;\n}\n\nfunction find(data) {\n\tvar current = this.root;\n\twhile(current != null) {\n\t\tif(current.data == data) {\n\t\t\treturn current;\n\t\t} else if (data < current.data) {\n\t\t\tcurrent = current.left;\n\t\t} else {\n\t\t\tcurrent = current.right;\n\t\t}\n\t}\n\treturn null;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("h3",{attrs:{id:"从二叉查找树上删除节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从二叉查找树上删除节点"}},[s._v("#")]),s._v(" 从二叉查找树上删除节点")]),s._v(" "),t("p",[s._v("从BST上删除节点的操作最复杂，其复杂程度取决于删除哪个节点。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function remove(data) {\n\troot = removeNode(this.root, data);\n}\n\nfunction removeNode(node, data) {\n\tif(node == null) {\n\t\treturn null;\n\t}\n\tif (data == node.data) {\n\t\t// 没有子节点的节点\n\t\tif (node.left == null && node.right == null) {\n\t\t\treturn null;\n\t\t}\n\t\t// 没有左子节点的节点\n\t\tif (node.left == null) {\n\t\t\treturn node.right;\n\t\t}\n\t\t// 没有右子节点的节点\n\t\tif (node.right == null) {\n\t\t\treturn node.left;\n\t\t}\n\t\t// 有两个子节点的节点\n\t\tvar tempNode = getSmallest(node.right);\n\t\tnode.data = tempNode.data;\n\t\tnode.right = removeNode(node.right, tempNode.Data);\n\t\treturn node;\n\t} else if(data < node.data) {\n\t\tnode.left = removeNode(node.left, data);\n\t\treturn node;\n\t} else {\n\t\tnode.right = removeNode(node.right, data);\n\t\treturn node;\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("h3",{attrs:{id:"练习-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习-5"}},[s._v("#")]),s._v(" 练习")]),s._v(" "),t("ol",[t("li",[s._v("为BST类增加一个新方法，该方法返回BST中节点的个数。")]),s._v(" "),t("li",[s._v("为BST类增加一个新方法，该方法返回BST中边的个数。")]),s._v(" "),t("li",[s._v("为BST类增加一个新方法max()，该方法返回BST中的最大值。")]),s._v(" "),t("li",[s._v("为BST类增加一个新方法min()，该方法返回BST中的最小值。")]),s._v(" "),t("li",[s._v("写一段程序，读入一个较大的文本文件，并将其中的单词保存到BST中，显示每个单词在文本中出现的次数。")])]),s._v(" "),t("h2",{attrs:{id:"第11章-图和图算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第11章-图和图算法"}},[s._v("#")]),s._v(" 第11章-图和图算法")]),s._v(" "),t("h3",{attrs:{id:"构建图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建图"}},[s._v("#")]),s._v(" 构建图")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function Graph(v) {\n\tthis.vertices = v;\n\tthis.edges = 0;\n\tthis.adj = [];\n\tfor(var i = 0;i < this.vertices; ++i) {\n\t\tthis.adj[i] = [];\n\t\tthis.adj[i].push("");\n\t}\n\tthis.addEdge = addEdge;\n\tthis.showGraph = showGraph;\n}\n\nfunction addEdge(v, w) {\n\tthis.adj[v].push(w);\n\tthis.adj[w].push(v);\n\tthis.edges++;\n}\n\n// showGraph()函数会通过打印所有顶点及其相邻顶点列表的方式来显示图\nfunction showGraph() {\n\tfor (var i = 0;i < this.vertices; ++i) {\n\t\tputstr(i + "->");\n\t\tfor(var j = 0;j < this.vertices; ++j) {\n\t\t\tif(this.adj[i][j] != undefined) {\n\t\t\t\tputstr(this.adj[i][j] + \'\');\n\t\t\t}\n\t\t}\n\t\tprint();\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("h3",{attrs:{id:"搜索图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索图"}},[s._v("#")]),s._v(" 搜索图")]),s._v(" "),t("p",[s._v("在图上可以执行两种基础搜索：深度优先搜索和广度优先搜索。")]),s._v(" "),t("p",[t("strong",[s._v("深度优先搜索")])]),s._v(" "),t("p",[s._v("深度优先搜索包括从一条路径的起始顶点开始追溯，直到到达最后一个顶点，然后回溯，继续追溯下一条路径，直到到达最后的顶点，如此往复，直到没有路径为止。")]),s._v(" "),t("p",[s._v("深度优先搜索算法比较简单：访问一个没有访问过的顶点，将它标记为已访问，再递归地去访问在初始顶点的邻接表中其他没有访问过的顶点。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// 添加标记\nfunction Graph(v) {\n\tthis.vertices = v;\n\tthis.edges = 0;\n\tthis.adj = [];\n\tfor(var i = 0;i < this.vertices; ++i) {\n\t\tthis.adj[i] = [];\n\t\tthis.adj[i].push("");\n\t}\n\tthis.addEdge = addEdge;\n\tthis.showGraph = showGraph;\n\tthis.dfs = dfs;\n\tthis.marked = [];\n\tfor(var i = 0;i < this.vertices; ++i) {\n\t\tthis.marked[i] = false;\n\t}\n}\n\nfunction dfs(v) {\n\tthis.marked[v] = true;\n\tif(this.adj[v] != undefined) {\n\t\tprint("Visited vertex: " + v);\n\t}\n\tfor(var w in this.adj[v]) {\n\t\tif(!this.marked[w]) {\n\t\t\tthis.dfs(w);\n\t\t}\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("p",[t("strong",[s._v("广度优先搜索")])]),s._v(" "),t("p",[s._v("广度优先搜索从第一个顶点开始，尝试访问尽可能靠近它的顶点。")]),s._v(" "),t("p",[s._v("广度优先搜索算法使用了抽象的队列而不是数组来对已访问过的顶点进行排序。其算法的工作原理如下：")]),s._v(" "),t("p",[s._v("（1）查找与当前顶点相邻的未访问顶点，将其添加到已访问顶点列表及队列中；")]),s._v(" "),t("p",[s._v("（2）从图中取出下一个顶点v，添加到已访问的顶点列表；")]),s._v(" "),t("p",[s._v("（3）将所有与v相邻的未访问顶点添加到队列。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function bfs(s) {\n\tvar queue = [];\n\tthis.marked[s] = true;\n\tqueue.push(s); // 添加到队尾\n\twhile(queue.length > 0) {\n\t\tvar v = queue.shift(); //从队首删除\n\t\tif (this.adj[v] != undefined) {\n\t\t\tprint("Visisted vertex: " + v);\n\t\t}\n\t\tfor(var w in this.adj[v]) {\n\t\t\tif(!this.marked[w]) {\n\t\t\t\tthis.marked[w] = true;\n\t\t\t\tqueue.push(w);\n\t\t\t}\n\t\t}\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"查找最短路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查找最短路径"}},[s._v("#")]),s._v(" 查找最短路径")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// 将这行添加到Graph类\nthis.edgeTo = [];\n\n// bfs函数\nfunction bfs(s) {\n\tvar queue = [];\n\tthis.marked[s] = true;\n\tqueue.push(s); // 添加到队尾\n\twhile(queue.length > 0) {\n\t\tvar v = queue.shift(); // 从队首移除\n\t\tif (v == undefined) {\n\t\t\tprint("Visisted vertex: " + v);\n\t\t}\n\t\tfor(var w in this.adj[v]) {\n\t\t\tif(!this.marked[w]) {\n\t\t\t\tthis.edgeTo[w] = v;\n\t\t\t\tthis.marked[w] = true;\n\t\t\t\tqueue.push(w);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// 展示连接到不同顶点的路径\nfunction pathTo(v) {\n\tvar source = 0;\n\tif (!this.hasPathTo(v)) {\n\t\treturn undefined;\n\t}\n\tvar path = [];\n\tfor(var i = v; i != source; i = this.edgeTo[i]) {\n\t\tpath.push(i);\n\t}\n\tpath.push(source);\n\treturn path;\n}\n\n// 记得在构造函数中补充：\n// this.pathTo = pathTo;\n// this.hasPathTo = hasPathTo;\nfunction hasPathTo(v) {\n\treturn this.marked[v];\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br")])]),t("h3",{attrs:{id:"拓扑排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拓扑排序"}},[s._v("#")]),s._v(" 拓扑排序")]),s._v(" "),t("p",[s._v("拓扑排序会对有向图的所有顶点进行排序，使有向边从前面的顶点指向后面的顶点。")]),s._v(" "),t("p",[s._v("拓扑排序算法与深度优先搜索类似。不同的是，拓扑排序算法不会立即输出已访问的顶点，而是访问当前顶点邻接表中的所有相邻顶点，直到这个列表穷尽时，才将当前顶点压入栈中。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function topSort() {\n\tvar stack = [];\n\tvar visited = [];\n\tfor(var i = 0;i < this.vertices; i++) {\n\t\tvisited[i] = false;\n\t}\n\tfor(var i = 0;i < this.vertices; i++) {\n\t\tif(visited[i] == false) {\n\t\t\tthis.topSortHelper(i, visited, stack);\n\t\t}\n\t}\n\tfor(var i = 0; i < stack.length; i++) {\n\t\tif(stack[i] != undefined && stack[i] != false) {\n\t\t\tprint(this.vertexList[stack[i]]);\n\t\t}\n\t}\n}\n\nfunction topSortHelper(v, visited, stack) {\n\tvisited[v] = true;\n\tfor(var w in this.adj[v]) {\n\t\tif(!visited[w]) {\n\t\t\tthis.topSortHelper(visited[w], visited, stack);\n\t\t}\n\t}\n\tstack.push(v);\n}\n\n// 构造器中添加\n// this.topSortHelper = topSortHelper;\n// this.topSort = topSort;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("h3",{attrs:{id:"练习-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习-6"}},[s._v("#")]),s._v(" 练习")]),s._v(" "),t("ol",[t("li",[s._v("编写一个程序，测试广度优先和深度优先这两种图搜索算法哪一种速度更快。请使用不同大小的图来测试你的程序。")]),s._v(" "),t("li",[s._v("编写一个用文件来存储图的程序。")]),s._v(" "),t("li",[s._v("编写一个从文件读取图的程序。")]),s._v(" "),t("li",[s._v("构建一个图，用它为你居住地的地图建模。测试一下从一个开始顶点到最后顶点的最短路径。")]),s._v(" "),t("li",[s._v("对上一题中创建的图执行深度优先搜索和广度优先搜索。")])]),s._v(" "),t("h2",{attrs:{id:"第12章-排序算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第12章-排序算法"}},[s._v("#")]),s._v(" 第12章-排序算法")]),s._v(" "),t("h3",{attrs:{id:"数组测试平台"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组测试平台"}},[s._v("#")]),s._v(" 数组测试平台")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function CArray(numElements) {\n\tthis.dataStore = [];\n\tthis.pos = 0;\n\tthis.numElements = numElements;\n\tthis.insert = insert;\n\tthis.toString = toString;\n\tthis.clear = clear;\n\tthis.setData = setData;\n\tthis.swap = swap;\n\tfor(var i = 0; i < numElements; ++i) {\n\t\tthis.dataStore[i] = i;\n\t}\n}\n\nfunction setData() {\n\tfor(var i = 0;i < this.numElements; ++i) {\n\t\tthis.dataStore[i] = Math.floor(Math.random() * (this.numElements + 1));\n\t}\n}\n\nfunction clear() {\n\tfor(var i = 0;i < this.dataStore.length; ++i) {\n\t\tthis.dataStore[i] = 0;\n\t}\n}\n\nfunction insert(element) {\n\tthis.dataStore[this.pos++] = element;\n}\n\nfunction toString() {\n\tvar restr = "";\n\tfor(var i = 0;i < this.dataStore.length; ++i) {\n\t\trestr += this.dataStore[i] + " ";\n\t\tif(i > 0 & i % 10 == 0) {\n\t\t\trestr += "\\n";\n\t\t}\n\t}\n\treturn restr;\n}\n\nfunction swap(arr, index1, index2) {\n\tvar temp =arr[index1];\n\tarr[index1] = arr[index2];\n\tarr[index2] = temp;\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br")])]),t("h3",{attrs:{id:"冒泡排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序"}},[s._v("#")]),s._v(" 冒泡排序")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function bubbleSort() {\n\tvar numElements = this.dataStore.length;\n\tvar temp;\n\tfor(var outer = numElements; outer >= 2; --outer) {\n\t\tfor(var inner = 0; inner <= outer - 1; ++inner) {\n\t\t\tif(this.dataStore[inner] > this.dataStore[inner + 1]) {\n\t\t\t\tswap(this.dataStore, inner, inner + 1);\n\t\t\t}\n\t\t}\n\t\tprint(this.toString());\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"选择排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择排序"}},[s._v("#")]),s._v(" 选择排序")]),s._v(" "),t("p",[s._v("选择排序从数组的开头开始，将第一个元素和其他元素进行比较。检查完所有元素后，最小的元素会被放到数组的第一个位置，然后算法会从第二个位置继续。这个过程一直进行，当进行到数组的倒数第二个位置时，所有的数据便完成了排序。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function selectionSort() {\n\tvar min, temp;\n\tfor(var outer = 0;outer <= this.dataStore.length - 2; ++outer) {\n\t\tmin = outer;\n\t\tfor(var inner = outer + 1; inner <= this.dataStore.length - 1; ++inner) {\n\t\t\tif (this.dataStore[inner] < this.dataStore[min]) {\n\t\t\t\tmin = inner;\n\t\t\t}\n\t\t\tswap(this.dataStore, outer, min);\n\t\t}\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"插入排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入排序"}},[s._v("#")]),s._v(" 插入排序")]),s._v(" "),t("p",[s._v("插入排序有两个循环。外循环将数组元素挨个移动，而内循环则对外循环中选中的元素及它后面的那个元素进行比较。如果外循环中选中的元素比内循环中选中的元素小，那么数组元素会向右移动，为内循环中的这个元素腾出位置")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function insertSort() {\n\tvar temp, inner;\n\tfor(var outer = 1;outer <= this.dataStore.length - 1; ++outer) {\n\t\ttemp = this.dataStore[outer];\n\t\tinner = outer;\n\t\twhile(inner > 0 && (this.dataStore[inner - 1] >= temp)) {\n\t\t\tthis.dataStore[inner] = this.dataStore[inner - 1];\n\t\t\t--inner;\n\t\t}\n\t\tthis.dataStore[inner] = temp;\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"希尔排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序"}},[s._v("#")]),s._v(" 希尔排序")]),s._v(" "),t("p",[s._v("希尔排序的工作原理是，通过定义一个间隔序列来表示在排序过程中进行比较的元素之间有多远的间隔。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function shellSort() {\n\tfor(var g = 0;g < this.gaps.length; ++g) {\n\t\tfor(var i = this.gaps[g];i < this.dataStore.length; ++i) {\n\t\t\tvar temp = this.dataStore[i];\n\t\t\tfor(var j = i;j >= this.gaps[g] && this.dataStore[j - this.gaps[g]] > temp; j-= this.gaps[g]) {\n\t\t\t\tthis.dataStore[j] = this.dataStore[j - this.gaps[g]];\n\t\t\t}\n\t\t\tthis.dataStore[j] = temp;\n\t\t}\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"归并排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#归并排序"}},[s._v("#")]),s._v(" 归并排序")]),s._v(" "),t("p",[s._v("归并排序的命名来自它的实现原理：把一系列排好序的子序列合并成一个大的完整有序序列。")]),s._v(" "),t("p",[s._v("在实际情况中，归并排序还有一些问题，当我们用这个算法对一个很大的数据集进行排序时，我们需要相当大的空间来合并存储两个子数组。")]),s._v(" "),t("p",[s._v("通常来讲（也不一定），归并排序会使用递归的算法来实现。然而，在JavaScript中这种方式不太可行，因为这个算法的递归深度对它来讲太深了。所以，我们将使用一种非递归的方式来实现这个算法，这种策略称为自底向上的归并排序。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('funciton mergeSort(arr) {\n\tif(arr.length < 2) {\n\t\treturn;\n\t}\n\tvar step = 1;\n\tvar left,right;\n\twhile(step < arr.length) {\n\t\tleft = 0;\n\t\tright = step;\n\t\twhile(right + step < arr.length) {\n\t\t\tmergeArrays(arr, left, left + step, right, right + step);\n\t\t\tleft = right + step;\n\t\t\tright = left + step;\n\t\t}\n\t\tif (right < arr.length) {\n\t\t\tmergeArray(arr, left, left + step, right, arr.length);\n\t\t}\n\t\tstep *= 2;\n\t}\n}\n\nfunction mergeArrays(arr, startLeft, stopLeft, startRight, stopRight) {\n\tvar rightArr = new Array(stopRgith - startRight + 1);\n\tvar leftArr = new Array(stopLeft - startLeft + 1);\n\tk = startRight;\n\tfor(var i = 0 ;i < (rightArr.length - 1); ++i) {\n\t\trightArr[i] = arr[k];\n\t\t++k;\n\t}\n\tk = startLeft;\n\tfor(var i = 0;i < (leftArr.length - 1); ++i) {\n\t\tleftArr[i] = arr[k];\n\t\t++k;\n\t}\n\trightArr[rightArr.length - 1] = Infinity; // 哨兵值\n\tleftArr[leftArr.length - 1] = Infinity; // 哨兵值\n\tvar m = 0;\n\tvar n = 0;\n\tfor(var k = startLeft; k < stopRight; ++k) {\n\t\tif(leftArr[m] <= rightArr[n]) {\n\t\t\tarr[k] = leftArr[m];\n\t\t\tm++;\n\t\t} else {\n\t\t\tarr[k] = rightArr[n];\n\t\t\tn++;\n\t\t}\n\t}\n\tprint("left array - ", leftArr);\n\tprint("right array - ", rightArr);\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br")])]),t("h3",{attrs:{id:"快速排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速排序"}},[s._v("#")]),s._v(" 快速排序")]),s._v(" "),t("p",[s._v("快速排序是处理大数据集最快的排序算法之一。它是一种分而治之的算法，通过递归的方式将数据依次分解为包含较小元素和较大元素的不同子序列。该算法不断重复这个步骤直到所有数据都是有序的。")]),s._v(" "),t("p",[s._v("快速排序的算法如下：")]),s._v(" "),t("p",[s._v("（1）选择一个基准元素，将列表分隔成两个子序列；")]),s._v(" "),t("p",[s._v("（2）对列表重新排序，将所有小于基准值的元素放在基准值的前面，所有大于基准值的元素放在基准值的后面；（3）分别对较小元素的子序列和较大元素的子序列重复步骤1和2。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function qSort(list) {\n\tif(list.length == 0) {\n\t\treturn [];\n\t}\n\tvar lesser = [];\n\tvar greater = [];\n\tvar pivot = list[0];\n\tfor(var i = 1;i < list.length; i++) {\n\t\tif(list[i] < pivot) {\n\t\t\tlesser.push(list[i]);\n\t\t} else {\n\t\t\tgreater.push(list[i]);\n\t\t}\n\t}\n\treturn qSort(lesser).concat(pivot, qSort(greater));\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"第13章-检索算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第13章-检索算法"}},[s._v("#")]),s._v(" 第13章-检索算法")]),s._v(" "),t("p",[s._v("在列表中查找数据有两种方式：顺序查找和二分查找。顺序查找适用于元素随机排列的列表；二分查找适用于元素已排序的列表。二分查找效率更高，但是你必须在进行查找之前花费额外的时间将列表中的元素排序。")]),s._v(" "),t("h3",{attrs:{id:"顺序查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#顺序查找"}},[s._v("#")]),s._v(" 顺序查找")]),s._v(" "),t("p",[s._v("使用自组织数据")]),s._v(" "),t("p",[s._v("查找最频繁的元素最终会移动到数据集的起始位置。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function seqSearch(arr, data) {\n\tfor(var i = 0;i < arr.length; ++i) {\n\t\tif(arr[i] == data && i > (arr.length * 0.2)) {\n\t\t\tswap(arr, i, 0);\n\t\t\treturn true;\n\t\t} else if(arr[i] == data) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"二分查找算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二分查找算法"}},[s._v("#")]),s._v(" 二分查找算法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function binSearch(arr, data) {\n\tvar upperBound = arr.length - 1;\n\tvar lowerBound = 0;\n\twhile(lowerBound <= upperBound) {\n\t\tvar mid = Math.floor(upperBound + lowerBound / 2);\n\t\tif (arr[mid] < data) {\n\t\t\tlowerBound = mid + 1;\n\t\t} else if(arr[mid] > data) {\n\t\t\tupperBound = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -1;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"第14章-高级算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第14章-高级算法"}},[s._v("#")]),s._v(" 第14章-高级算法")]),s._v(" "),t("p",[s._v("递归是从顶部开始将问题分解，通过解决掉所有分解出小问题的方式，来解决整个问题。动态规划解决方案从底部开始解决问题，将所有小问题解决掉，然后合并成一个整体解决方案，从而解决掉整个大问题。")]),s._v(" "),t("h3",{attrs:{id:"动态规划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[s._v("#")]),s._v(" 动态规划")]),s._v(" "),t("p",[s._v("递归和动态规划版本的斐波那契数列")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function recurFib(n) {\n\tif (n < 2) {\n\t\treturn n;\n\t} else {\n\t\treturn recurFib(n - 1) + recurFib(n - 2);\n\t}\n}\n\nfunction dynFib(n) {\n\tvar val = [];\n\tfor(var i = 0;i <= n; ++i) {\n\t\tval[i] = 0;\n\t}\n\tif (n == 1 || n == 2){\n\t\treturn 1;\n\t} else {\n\t\tval[1] = 1;\n\t\tval[2] = 2;\n\t\tfor(var i = 3; i <= n; ++i) {\n\t\t\tval[i] = val[i - 1] + val[i - 2];\n\t\t}\n\t\treturn val[n -1];\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[t("strong",[s._v("最大公共子串")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('function lcs(word1, word2) {\n\t// 初始化了两个变量以及一个二维数组\n\tvar max = 0;\n\tvar index = 0;\n\tvar lcsarr = new Array(word1.length + 1);\n\tfor(var i = 0;i <= word1.length + 1; ++i) {\n\t\tlcsarr[i] = new Array(word2.length + 1);\n\t\tfor(var j = 0;j <= word2.length + 1; ++j) {\n\t\t\tlcsarr[i][j] = 0;\n\t\t}\n\t}\n\t// 构建了用于保存字符匹配记录的表\n\tfor(var i = 0;i <= word1.length; ++i) {\n\t\tfor(var j = 0; j <= word2.length; ++j) {\n\t\t\tif(i == 0 || j == 0) {\n\t\t\t\tlcsarr[i][j] = 0;\n\t\t\t} else {\n\t\t\t\tif(word[i - 1] === word2[j - 1]) {\n\t\t\t\t\tlcsarr[i][j] = lcsarr[i - 1][j - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\tlcsarr[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (max < lcsarr[i][j]) {\n\t\t\t\tmax = lcsarr[i][j];\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\tvar str = "";\n\tif (max == 0) {\n\t\treturn "";\n\t} else {\n\t\tfor(var i = index - max; i <= max; ++i) {\n\t\t\tstr += word2[i];\n\t\t}\n\t\treturn str;\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br")])]),t("p",[t("strong",[s._v("背包问题：递归解决方案")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("funtion max(a, b) {\n\treturn (a > b) ? a : b;\n}\n\nfunction knapsack(capacity, size, value, n) {\n\tif (n == 0 || capacity == 0) {\n\t\treturn 0;\n\t}\n\tif (size[n - 1] > capacity) {\n\t\treturn knapsack(capacity, size, value, n - 1);\n\t} else {\n\t\treturn max(value[n - 1] + knapsack(capacity - size[n - 1], size, value, n - 1),\n\t\t\tknapsack(capacity, size, value, n - 1));\n\t}\n}\n\nvar value = [4, 5, 10, 11, 13];\nvar size = [3, 4, 7, 8, 9];\nvar capacity = 16;\nvar n = 5;\nprint(knapsack(capacity, size, value, n));\n\n// 答案 12\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[t("strong",[s._v("动态规划解决背包问题")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('funtion max(a, b) {\n\treturn (a > b) ? a : b;\n}\n\nfunction dKnapsack(capacity, size, value, n) {\n\tvar K = [];\n\tfor(var i = 0; i <= capacity + 1; i++) {\n\t\tK[i] = [];\n\t}\n\tfor(var i = 0; i <= n; i++) {\n\t\tfor(var w = 0; w <= capacity; w++) {\n\t\t\tif(i == 0 || w == 0) {\n\t\t\t\tK[i][w] = 0;\n\t\t\t} else if(size[i - 1] <= w) {\n\t\t\t\tK[i][w] = max(value[i - 1] + K[i - 1][w - size[i - 1]], K[i - 1][w]);\n\t\t\t} else {\n\t\t\t\tK[i][w] = K[i - 1][w];\n\t\t\t}\n\t\t\tputstr(K[i][w] + " ");\n\t\t}\n\t\tprint();\n\t}\n\treturn K[n][capacity];\n}\n\nvar value = [4, 5, 10, 11, 13];\nvar size = [3, 4, 7, 8, 9];\nvar capacity = 16;\nvar n = 5;\nprint(dKnapsack(capacity, size, value, n));\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("h3",{attrs:{id:"贪心算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#贪心算法"}},[s._v("#")]),s._v(" 贪心算法")]),s._v(" "),t("p",[s._v("贪心算法总是会选择当下的最优解，而不去考虑这一次的选择会不会对未来的选择造成影响。")]),s._v(" "),t("p",[s._v("找零问题")]),s._v(" "),t("p",[t("strong",[s._v("背包问题的贪心算法解决方案")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function ksack(values, weights, capacity) {\n\tvar load = 0;\n\tvar i = 0;\n\tvar w = 0;\n\twhile(load < capacity && i < 4) {\n\t\tif(weights[i] <= (capacity - load)) {\n\t\t\tw += values[i];\n\t\t\tload += weights[i];\n\t\t} else {\n\t\t\tvar r = (capacity - load) / weights[i];\n\t\t\tw += r * values[i];\n\t\t\tload += weights[i];\n\t\t}\n\t\t++i;\n\t}\n\treturn w;\n}\n\nvar items = ['A', 'B', 'C', 'D'];\nvar values = [50, 140, 60, 60];\nvar weights = [5, 20, 10, 12];\nvar capacity = 30;\nprint(ksack(values, weights, capacity)) // 显示220\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);