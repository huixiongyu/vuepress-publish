(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{434:function(a,t,v){"use strict";v.r(t);var e=v(54),_=Object(e.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"《react-native移动开发实战》"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#《react-native移动开发实战》"}},[a._v("#")]),a._v(" 《React Native移动开发实战》")]),a._v(" "),v("p",[a._v("这是第一次接触React Native开发，而最近尝试用Taro开发多端程序，才发现Taro为我们屏蔽了很多复杂的API。RN看到很多View 、Navigator之类貌似Andriod原生的标签，才醒悟到小程序不光仿React ，仿的还是元素开发的标签！这本书入门刚刚好，有些细节还没认真琢磨，比如混合开发、第三方库的效果，等用Taro开发了两个程序再来瞄瞄~。")]),a._v(" "),v("p",[a._v("时间：3小时25分 2020年7月19日")]),a._v(" "),v("h2",{attrs:{id:"第1章-react-native入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第1章-react-native入门"}},[a._v("#")]),a._v(" 第1章  React Native入门")]),a._v(" "),v("p",[a._v("脏检查：scope dist + 非必要DOM更新")]),a._v(" "),v("p",[a._v("依赖收集：重新收集依赖 + 必要DOM更新")]),a._v(" "),v("p",[a._v("依赖收集在初始化和数据变化的时候都需要重新收集依赖，在数据流比较小的时候几乎可以忽略，但在数据量比较大的时候就会产生一定的消耗。")]),a._v(" "),v("p",[a._v("在优化的版本中，Angular和Vue采用了track by $index技术后比React的效率更高。")]),a._v(" "),v("h2",{attrs:{id:"第2章-react-native环境搭建"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第2章-react-native环境搭建"}},[a._v("#")]),a._v(" 第2章  React Native环境搭建")]),a._v(" "),v("p",[a._v("下载并安装最新版的JDK")]),a._v(" "),v("p",[a._v("安装Andriod SDK环境可以单独安装Andriod SDK，也可以通过Andriod Studio一并安装。")]),a._v(" "),v("p",[a._v("安装模拟器，推荐使用Genymotion。")]),a._v(" "),v("h2",{attrs:{id:"第3章-react-native开发基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第3章-react-native开发基础"}},[a._v("#")]),a._v(" 第3章 React Native开发基础")]),a._v(" "),v("p",[a._v("FlexBox布局属性：")]),a._v(" "),v("ul",[v("li",[a._v("display-flex")]),a._v(" "),v("li",[a._v("flex-direction")]),a._v(" "),v("li",[a._v("flex-wrap")]),a._v(" "),v("li",[a._v("flex-flow")]),a._v(" "),v("li",[a._v("justify-content")]),a._v(" "),v("li",[a._v("align-items")]),a._v(" "),v("li",[a._v("align-content")])]),a._v(" "),v("p",[a._v("在ES6里，统一使用static成员来修饰属性类型和默认属性。")]),a._v(" "),v("p",[a._v("相对于ES5语法，使用ES6语法开发需要开发者自己手动绑定每一个回调函数，这对于开发者来说似乎是一种方便性上的退步。")]),a._v(" "),v("p",[a._v("ES6对参数的写法做了较大的改动，主要体现在参数默认值、不定参数、扩展参数方面。")]),a._v(" "),v("p",[a._v("事件绑定：JSX可以给元素直接绑定事件，如点击事件。React并不会真正绑定事件到每一个具体的元素上，而是采用事件代理的方式，在根节点document上为每种时间添加唯一的事件监听者（Listener），然后通过事件的目标函数（target）找到真实触发元素的相关事件。")]),a._v(" "),v("p",[a._v("在React Native的手势响应系统中，一个完整的触摸事件分为3个生命周期状态：开始（Start)、移动（move）和释放（release），对应Web浏览器的mouseDown、MouseMove和mouseUp3个生命周期状态。")]),a._v(" "),v("h2",{attrs:{id:"第4章-常用组件介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第4章-常用组件介绍"}},[a._v("#")]),a._v(" 第4章  常用组件介绍")]),a._v(" "),v("p",[a._v("常用组件：")]),a._v(" "),v("ul",[v("li",[a._v("View")]),a._v(" "),v("li",[a._v("Image")]),a._v(" "),v("li",[a._v("Text")]),a._v(" "),v("li",[a._v("ListView")]),a._v(" "),v("li",[a._v("TextInput")]),a._v(" "),v("li",[a._v("ScrollView")]),a._v(" "),v("li",[a._v("Navigator")]),a._v(" "),v("li",[a._v("WebView")]),a._v(" "),v("li",[a._v("TabBarIOS和TarBarIOS.Item")]),a._v(" "),v("li",[a._v("ToolbarAndroid")]),a._v(" "),v("li",[a._v("SegementedControllOS")]),a._v(" "),v("li",[a._v("ViewPagerAndroid")]),a._v(" "),v("li",[a._v("Touchable系列")])]),a._v(" "),v("h2",{attrs:{id:"第5章-常用api介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第5章-常用api介绍"}},[a._v("#")]),a._v(" 第5章  常用API介绍")]),a._v(" "),v("p",[a._v("常用API")]),a._v(" "),v("ul",[v("li",[a._v("AppRegistry")]),a._v(" "),v("li",[a._v("StyleSheet")]),a._v(" "),v("li",[a._v("AsyncStorage")]),a._v(" "),v("li",[a._v("PixelRatio")]),a._v(" "),v("li",[a._v("Animated")]),a._v(" "),v("li",[a._v("Geolocation")]),a._v(" "),v("li",[a._v("NetInfo")])]),a._v(" "),v("p",[a._v("AsyncStorage是React Native提供的一种轻量级数据存储方式，因为使用了Key-Value存储系统，所以是不支持SQL语句的。可以使用react-native-storage")]),a._v(" "),v("h2",{attrs:{id:"第6章-组件封装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第6章-组件封装"}},[a._v("#")]),a._v(" 第6章  组件封装")]),a._v(" "),v("p",[a._v("第三方库：")]),a._v(" "),v("ul",[v("li",[a._v("react-navigation")]),a._v(" "),v("li",[a._v("react-native-tab-navigator")]),a._v(" "),v("li",[a._v("react-native-scrollable-tab-view")]),a._v(" "),v("li",[a._v("react-native-image-picker")]),a._v(" "),v("li",[a._v("Mobx")]),a._v(" "),v("li",[a._v("react-native-art")])]),a._v(" "),v("p",[a._v("Mobx最核心的对象莫过于观察者和被观察者，对应于Mobx的@observer和@observable。使用@observeable将对象变为一个被观察者。")]),a._v(" "),v("h2",{attrs:{id:"第7章-网络与通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第7章-网络与通信"}},[a._v("#")]),a._v(" 第7章  网络与通信")]),a._v(" "),v("h2",{attrs:{id:"第8章-混合开发高级篇"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第8章-混合开发高级篇"}},[a._v("#")]),a._v(" 第8章  混合开发高级篇")]),a._v(" "),v("h2",{attrs:{id:"第9章-热更新与打包部署"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第9章-热更新与打包部署"}},[a._v("#")]),a._v(" 第9章  热更新与打包部署")]),a._v(" "),v("h2",{attrs:{id:"第10章-基于lbs的天气预报应用开发"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第10章-基于lbs的天气预报应用开发"}},[a._v("#")]),a._v(" 第10章 基于LBS的天气预报应用开发")]),a._v(" "),v("h2",{attrs:{id:"第11章-o2o移动团购应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第11章-o2o移动团购应用"}},[a._v("#")]),a._v(" 第11章  O2O移动团购应用")])])}),[],!1,null,null,null);t.default=_.exports}}]);