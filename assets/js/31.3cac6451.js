(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{417:function(a,s,t){"use strict";t.r(s);var e=t(54),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"《css揭秘》"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#《css揭秘》"}},[a._v("#")]),a._v(" 《CSS揭秘》")]),a._v(" "),t("p",[a._v("这本书据说是CSS的经典，看了之后真的才发现CSS可以像公孙离那样花里胡哨，太酷了！！！")]),a._v(" "),t("h5",{attrs:{id:"阅读时间-2020年8月16日-4小时15分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阅读时间-2020年8月16日-4小时15分"}},[a._v("#")]),a._v(" 阅读时间：2020年8月16日  4小时15分")]),a._v(" "),t("h2",{attrs:{id:"第1章-引言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第1章-引言"}},[a._v("#")]),a._v(" 第1章 引言")]),a._v(" "),t("p",[a._v("Don't Repeat Yourself(DRY)，意思是不应该重复你已经做过的事。")]),a._v(" "),t("p",[a._v("如果改用百分比或em单位就好多了。")]),a._v(" "),t("p",[a._v("有时候，代码易维护和代码量少不可兼得。")]),a._v(" "),t("p",[a._v("如果把它拆成两条声明的话，改起来就容易多了，而且可读性或许更好一些：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("border-width: 10px;\nborder-left-width: 0;\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("这并不是说媒体查询是一种不良实践。只要用对了，它就是利器。但是，你只应该把它作为最后的手段。")]),a._v(" "),t("p",[a._v("避免使用不必要的媒体查询：")]),a._v(" "),t("ul",[t("li",[a._v("使用百分比长度来取代固定长度。如果实在做不到这一点，也应该尝试使用与视口相关的单位（vw、vh、vmin和vmax）,它们的值解析为视口宽度或高度的百分比。")]),a._v(" "),t("li",[a._v("当你需要在较大分辨率下得到固定宽度时，使用max-width而不是width，因为它可以适应较小的分辨率，而无需使用媒体查询。")]),a._v(" "),t("li",[a._v("不要忘记为替换元素（比如img、object、video、iframe等）设置一个max-width，值为100%。")]),a._v(" "),t("li",[a._v("加入背景图片需要完整地铺满一个容器，不管容器的尺寸如何变化，backgroud-size: cover这个属性都可以做到。")]),a._v(" "),t("li",[a._v("当图片（或其他元素）以行列式进行布局时，让视口的宽度来决定列的数量。弹性盒布局（即Flexbox）或者display: inline-block加上常规的文本折行行为，都可以实现这一点。")]),a._v(" "),t("li",[a._v("在使用多列文本时，指定column-width（列宽）而不是指定column-count（列数）,这样它就可以在较小的屏幕上自动显示为单列布局。")])]),a._v(" "),t("p",[a._v("如果只为某个属性提供一个值，那它就会扩散并应用到列表中的每一项。因此我们可以把这些重复的值从简写属性中抽出来写成一个展开式属性：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("background: url(tr.png) top right,\n\turl(br.png) bottom right;\n\turl(bl.png) bottom left;\nbackground-size: 2em 2em;\nbackground-repeat: no-repeat;\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("h2",{attrs:{id:"第2章-背景与边框"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第2章-背景与边框"}},[a._v("#")]),a._v(" 第2章 背景与边框")]),a._v(" "),t("p",[a._v("默认情况下，背景会延伸到边框所在的区域下层。")]),a._v(" "),t("p",[a._v("box-shadow的好处在于，它支持逗号分隔语法，我们可以创建任意数量的投影。")]),a._v(" "),t("p",[a._v("你可以给box-shadow属性加上inset关键字，来使投影绘制在元素的内圈。")]),a._v(" "),t("p",[a._v("background-position属性已经得到扩展，它允许我们指定背景图片距离任意的偏移量，只要我们在偏移量面前指定关键字。")]),a._v(" "),t("p",[a._v("默认情况下，background-position是以padding box为准的，这样边框才不会遮住背景图片。")]),a._v(" "),t("p",[a._v("如果把它的值改成content-box，我们在background-position属性中使用的边角关键字将会以内容区的边缘作为基准。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('padding: 10px;\nbackground: url("code-private.svg") no-repeat #58a\n\tbottom right;\nbackground-origin: content-box;\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("请不要忘记在calc()函数内部的-和+运算符的两侧各加一个空白符，否则会产生解析错误！")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("background: linear-gradient(#fb3 20%, #58a 80%);\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("现在容器顶部的20%区域被填充为#fb3实色，而底部20%区域被填充为#58a实色。真正的渐变只出现在容器60%的高度区域。")]),a._v(" "),t("p",[a._v("如果某个色标的位置值比整个列表中在它之前的色标的位置值都要小，则该色标的位置值会被设置为它前面所有色标位置值得最大值。")]),a._v(" "),t("p",[a._v("repeating-linear-gradient()")]),a._v(" "),t("p",[a._v("重复线性渐变完美适用于——你已经猜到了吧——条纹效果!")]),a._v(" "),t("p",[a._v("网格中每个格子的大小可以调整，而网格线条的粗细同时保持固定。使用长度而不是百分比作为色标的场景：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("background: #58a;\nbackground-image:\n\tlinear-gradient(white 1px,transparent 0),\n\tlinear-gradient(90deg, white 1px,transparent 0);\nbackground-size: 30px 30px;\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("为了让下层的图片背景透过边框区域显示出来，我们需要给两层背景指定不同的background-clip值。")]),a._v(" "),t("p",[a._v("设置蚂蚁行军边框：animation: ants 12s linear infinite；")]),a._v(" "),t("h2",{attrs:{id:"第3章-形状"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第3章-形状"}},[a._v("#")]),a._v(" 第3章 形状")]),a._v(" "),t("p",[a._v("如果它的宽高相等，就显示为一个圆；如果宽高不等，就显示为一个椭圆。")]),a._v(" "),t("p",[a._v("相同的百分比可能会计算出不同的水平和垂直半径。")]),a._v(" "),t("p",[a._v("通过skew()的变形属性来对这个矩形进行斜向拉伸。")]),a._v(" "),t("h2",{attrs:{id:"第4章-视觉效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第4章-视觉效果"}},[a._v("#")]),a._v(" 第4章  视觉效果")]),a._v(" "),t("p",[a._v("单侧投影：最终的解决方案来自box-shadow鲜为人知的第四个长度参数。它排在模糊半径参数之后，称作扩张半径。这个参数会根据你指定的值去扩大或（当指定负值时）缩小投影的尺寸。")]),a._v(" "),t("p",[a._v("双侧投影：唯一的办法是用两块投影（每边各一块）来达到目的。")]),a._v(" "),t("h2",{attrs:{id:"第5章-字体排版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第5章-字体排版"}},[a._v("#")]),a._v(" 第5章  字体排版")]),a._v(" "),t("p",[a._v("如果要把font-variant-ligatures属性复位为初始值，应该使用normal而不是none。")]),a._v(" "),t("p",[a._v("我们通常会在font-family声明中同时指定多个字体（即字体队列）。这样，即使我们指定的最优字体不可用，浏览器还可以回退到其他符合整体设计风格的字体。但是，很多开发者都忽略了一点：这个机制对单个字符来说也是有效的。")]),a._v(" "),t("h2",{attrs:{id:"第6章-用户体验"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第6章-用户体验"}},[a._v("#")]),a._v(" 第6章  用户体验")]),a._v(" "),t("p",[a._v("其实有一个元素总是跟复选框形影不离、息息相关，它就是<label>(标签元素)。当<label>元素与复选框关联之后，也可以起到触发开关的作用。")]),a._v(" "),t("p",[a._v("由于label不是复选框那样的替换元素，我们可以为它添加生成性内容（伪元素），并基于复选框的状态来为其设置样式。然后，就可以把真正的复选框隐藏起来（但不能把它从tab键切换焦点的队列中完全删除），再把生成性内容美化一番，用来顶替原来的复选框！")]),a._v(" "),t("h2",{attrs:{id:"第7章-结构与布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第7章-结构与布局"}},[a._v("#")]),a._v(" 第7章  结构与布局")]),a._v(" "),t("p",[a._v("只要换用基于百分比的CSS变形来对元素进行偏移，就不需要再偏移量中把元素的尺寸写死了。这样我们就可以彻底解除对固定尺寸的依赖：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("main{\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n}\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("请注意，当我们使用Flexbox时，margin: auto不仅在水平方向上将元素居中，垂直方向上也是如此。")]),a._v(" "),t("p",[a._v("在未来，对于简单的垂直居中需求，我们完全不需要动用特殊的布局模式了。因为只需要下面这行代码可以搞定：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("align-self: center;\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("此时我们所期望的是，页头和页脚的高度由其内部因素来决定，而内容区块的高度应该可以自动伸展并占满所有的可用空间。我们只要给<main>这个容器的flex属性指定一个大于0的值，（比如1即可），就可以实现这个效果了：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("body {\n\tdisplay: flex;\n\tflex-flow: column;\n\tmin-height: 100vh;\n}\nmain { flex: 1; }\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h2",{attrs:{id:"第8章-过渡与动画"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第8章-过渡与动画"}},[a._v("#")]),a._v(" 第8章  过渡与动画")]),a._v(" "),t("p",[a._v("圆圈环绕效果")])])}),[],!1,null,null,null);s.default=n.exports}}]);