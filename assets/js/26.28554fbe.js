(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{412:function(s,n,a){"use strict";a.r(n);var e=a(54),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"《左手mongodb-右手redis》"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#《左手mongodb-右手redis》"}},[s._v("#")]),s._v(" 《左手MongoDB，右手Redis》")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.yuque.com/kingname/wtago8/xwg3gb",target:"_blank",rel:"noopener noreferrer"}},[s._v("配套视频资源"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/kingname/SourceCodeofMongoRedis",target:"_blank",rel:"noopener noreferrer"}},[s._v("代码下载"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("阅读时间：2020年3月12日完成，耗时5h20min")]),s._v(" "),a("h2",{attrs:{id:"一、mongodb基础与入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、mongodb基础与入门"}},[s._v("#")]),s._v(" 一、MongoDB基础与入门")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.mongodb.com/download-center/community",target:"_blank",rel:"noopener noreferrer"}},[s._v("MongoDB下载&安装"),a("OutboundLink")],1),s._v(":  "),a("a",{attrs:{href:"https://www.imooc.com/article/22733",target:"_blank",rel:"noopener noreferrer"}},[s._v("Mac教程"),a("OutboundLink")],1),s._v("&"),a("a",{attrs:{href:"https://www.imooc.com/article/18438",target:"_blank",rel:"noopener noreferrer"}},[s._v("windows教程"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("Linux下使用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("sudo apt update\nsudo apt install -y mongodb\n// 确认是否在运行\nsystemctl status mongodb\n// 启动\nsudo systemctl start mongod\nsudo systemctl enable mongod\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://robomongo.org/download",target:"_blank",rel:"noopener noreferrer"}},[s._v("Robo 3T下载"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("Create Database")]),s._v(" "),a("p",[s._v("Create Collections...")]),s._v(" "),a("h3",{attrs:{id:"插入操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入操作"}},[s._v("#")]),s._v(" "),a("strong",[s._v("插入操作")])]),s._v(" "),a("p",[s._v("Ctrl + R运行")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('db.getCollection(\'classes\').insertOne({"name": " 张小二 ", "age": 17,"address":"浙江"})\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在设计数据库时，应尽量保证同一个字段使用同一种类型的数据，并提前考虑好应该有哪些字段。")]),s._v(" "),a("h3",{attrs:{id:"批量插入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量插入"}},[s._v("#")]),s._v(" "),a("strong",[s._v("批量插入")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("db.getCollection('classes').insertMany({\n\t{'name': '朱小三', 'age': 20, 'address': '北京'},\n\t{'name': '刘小四', 'age': 21, 'address': '上海'},\n\t{'name': '马小伍', 'age': 22, 'address': '广州'}\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("无论是插入一条数据还是插入多条数据，每一条数据被插入 MongoDB 后都会被自动添加一个字段“_id”。“_id”读作“Object Id”，它是由时间、机器码、进程pid和自增计数器构成的。")]),s._v(" "),a("p",[s._v("_id前8位转化为十进制为时间戳。")]),s._v(" "),a("h3",{attrs:{id:"查询数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询数据"}},[s._v("#")]),s._v(" "),a("strong",[s._v("查询数据")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 1.查询所有\ndb.getCollection('example_data_1').find({})\n\n// 2.查询特定的，键值对可以是多个\ndb.getCollection('example_data_1').find({'age': 25})\n\n// 3.查询数值范围, 被限定的条件编程了一个字典\ndb.getCollection('example_data_1').find({'age': {'$gte': 25}})\n\n// 4.设定返回字段，0的字段不返回，1则返回 ，_id默认是返回，除非指定为0\ndb.getCollection('example_data_1').find({}, {'address': 0, 'age': 0})\n\n// 5.修饰返回结果\n// (1)统计数量\ndb.getCollection('example_data_1').find({'age': {'$gt': 21}}).count()\n\n// (2)限定返回条数\ndb.getCollection('example_data_1').find().limit(4)\n\n// (3)对结果排序，比如倒序\ndb.getCollection('example_data_1').find({'age': {'$gt': 21}}).sort({'age': -1})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h3",{attrs:{id:"修改数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改数据"}},[s._v("#")]),s._v(" "),a("strong",[s._v("修改数据")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("updateOne：只更新第1条满足要求的数据。")])]),s._v(" "),a("li",[a("p",[s._v("updateMany：更新所有满足要求的数据。")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("db.getCollection('example_data_1').updateMany(\n\t{'name': '王小六'},\n\t{'$set': {'address': '苏州', 'work': '工程师'}}\n)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"删除数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除数据"}},[s._v("#")]),s._v(" "),a("strong",[s._v("删除数据")])]),s._v(" "),a("p",[s._v("为了防止误删数据，一般的做法是先查询要删除的数据，然后再将查出的数据删除，工程上会使用字段标记，默认情况deleted为0， 更新为1表示删除。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 返回acknowledged为true表示删除成功，deletedCount表示删除的条数\ndb.getCollection('example_data_1').deleteMany({'hello': 'world'})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"数据去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据去重"}},[s._v("#")]),s._v(" 数据去重")]),s._v(" "),a("p",[s._v("参数1：字段名，参数2：查询条件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("db.getCollection('example_data_1').distinct(\n\t'age',\n\t{'age': {'$gte': 24}}\n)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("hr"),s._v(" "),a("h3",{attrs:{id:"python中使用mongodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python中使用mongodb"}},[s._v("#")]),s._v(" Python中使用MongoDB")]),s._v(" "),a("p",[s._v("安装：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("python3 -m pip install pymongo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from pymongo import MongoClient\nclient = MongoClient('mongodb://用户名：密码@服务器IP:端口')\ndatabase = client.数据库名\n# 或者 database = client[db_name]\ncollection = database.集合名\n# 或者 collection = database[collection_name]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("在Python中使用，找到需要用的collection，驼峰方法都转换为下划线")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# pymongo中， insert()相当于insert_one(),还可以传入字典包含的多个集合，相当于insert_many()\ncollection.insert_one({'name': ’王小六’, 'age': 25, 'work': ’厨师’})\n\n# 更新,存在则更新，不存在则插入\ncollection.update_many(\n\t{'name': '公孙小八'},\n\t{'$set', {'address': '美国', 'age': 80}},\n\tupsert=True)\n\t\n# 删除\ncollection.delete_many({'age': 0})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("绝大部分MongoDB命令复制到Python中可以使用")]),s._v(" "),a("p",[s._v("例外的是")]),s._v(" "),a("ul",[a("li",[s._v("含有null的数据，需要用None替代")]),s._v(" "),a("li",[s._v("true/false改写成True/False")]),s._v(" "),a("li",[s._v("sort（），Python中接收，第一个字段名，第二个 -1/1")]),s._v(" "),a("li",[s._v("ObjectId用bson导入")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from bson import ObjectId\ncollection.find({'_id': ObjectId('5b2f75d26b78a61364d09f45')})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("学习数据库绝对不能仅仅学习数据库本身的命令，一定要配合一门编程语言，这样才能掌握如何应用数据库。")])]),s._v(" "),a("hr"),s._v(" "),a("p",[a("strong",[s._v("参考：")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://docs.mongodb.com/manual/crud/",target:"_blank",rel:"noopener noreferrer"}},[s._v("MongoDB CRUD Operations"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("Python中使用"),a("a",{attrs:{href:"https://api.mongodb.com/python/current/tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("pymongo"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("项目代码：")]),s._v(" "),a("h2",{attrs:{id:"二、mongodb高级应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、mongodb高级应用"}},[s._v("#")]),s._v(" 二、MongoDB高级应用")]),s._v(" "),a("h3",{attrs:{id:"and和or操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#and和or操作"}},[s._v("#")]),s._v(" AND和OR操作")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 隐式AND操作\ndb.getCollection('example_data_1').find({'age': {'$gt': 20}, 'sex': '男'})\n\n// 显式AND操作\n// collection.find({'$and': [字典1, 字典2, 字典3, ..., 字典n]})\ndb.getCollection('example_data_1').find({\n\t'$and': [{'age': {'$gt': 20}, {'sex': '男'}}]\n})\n\n// 显式和隐式混合\ndb.getCollection('example_data_1').find({\n\t'id': {'$lt': 10},\n\t'$and': [{'age': {'$gt': 20}}, {'sex': '男'}]\n})\n\n// OR操作\n// 1.显式OR操作\n// collection.find({'$or': [字典1, 字典2, 字典3, ..., 字典n]})\ndb.getCollection('example_data_1').find({\n\t'$or': [{'age': {'$gt': 28}}, {'salary': {'$gt': 9900}}]\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("OR操作会自动按顺序去检查每一个条件，直到某一个查询条件找到至少一条数据为止。MongoDB在执行OR操作时会遵循一个“短路原则”：只要前面的条件满足了，那后面的条件就直接跳过。")]),s._v(" "),a("p",[a("strong",[s._v("OR操作一定是显式的，不存在隐式的OR操作。")])]),s._v(" "),a("h3",{attrs:{id:"嵌入式文档的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌入式文档的应用"}},[s._v("#")]),s._v(" 嵌入式文档的应用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 1.使用点号定位嵌套字段\ndb.getCollection('example_data_2').find({'user.followed': {'$gt': 10}})\n\n// 2.返回嵌套字段中的特定内容\ndb.getCollection('example_data_2').find(\n\t{'user.followed': {'$gt': 10}},\n\t{'_id': 0, 'user.name': 1, 'user.user_id': 1}\t\n)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"查询数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询数组"}},[s._v("#")]),s._v(" 查询数组")]),s._v(" "),a("p",[s._v("三种情况：")]),s._v(" "),a("ol",[a("li",[s._v("数组包含或者不包含某些数据。")]),s._v(" "),a("li",[s._v("数组长度。")]),s._v(" "),a("li",[s._v("数组中特定位置的数满足某些条件。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 查询数组包含数据\ndb.getCollection('example_data_3').find({'size': 'M'})\n\n// 查询数组不含数据\ndb.getCollection('example_data_3').find({'size': {'$ne': 'M'}})\n\n// 数组中至少有一个元素在另一个范围空间内\ndb.getCollection('example_data_3').find({'price': {'$lt': 300, '$gte': 200}})\n\n// 根据数组长度查询\ndb.getCollection('example_data_3').find({'price': {'$size': 2}})\n\n// 根据索引查询数组\ndb.getCollection('example_data_3').find({'size.0': 'S'})\n\n// 根据数组索引比较数据的大小\ndb.getCollection('example_data_3').find({'price.0': {'$gt': 500}})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"聚合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合查询"}},[s._v("#")]),s._v(" 聚合查询")]),s._v(" "),a("p",[s._v("基本格式为： "),a("code",[s._v("collection.aggregate([阶段1, 阶段2, 阶段3, ..., 阶段N])")])]),s._v(" "),a("p",[s._v("聚合操作可以有0个、1个或者多个阶段。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 这个聚合效果和find()效果完全相同，单好处是组合\ndb.getCollection('example_data_1').aggregate([{\n\t'$match': {\n\t\t'$or': [{'age': {'$gt': 28}}, {'sex': '男'}]\n\t}\n}])\n\n// 添加新字段\n// 1.添加固定文本\ndb.getCollection('example_data_1').aggregate([\n\t{'$match': {'age': {'$gt': 28}}},\n\t{'$project': {'_id': 0, 'sex': 1, 'age': 1, 'hello': 'world'}}\n])\n\n// 2.复制现有字段\ndb.getCollection('example_data_1').aggregate([\n\t{'$match': {'age': {'$gt': 28}}},\n\t{'$project': {'_id': 0, 'sex': 1, 'age': 1, 'hello': '$age'}}\n])\n\n// 3. 修改现有字段的数据\ndb.getCollection('example_data_1').aggregate([\n\t{'$match': {'age': {'$gt': 28}}},\n\t{'$project': {'_id': 0, 'sex': 1, 'age': 'this is page'}}\n])\n\n// 抽取嵌套字段\ndb.getCollection('example_data_2').aggregate([\n\t{'$project': {'name': '$user.name', 'user_id': '$user.user_id'}}\n])\n\n// 处理特殊字段，下面'$literal'指定了要修改的值为$开头的，和值为1\ndb.getCollection('example_data_2').aggregate([\n\t{'$project': {'_id': 0, 'id': 1, 'hello': {'$literal': '$normalstring'}, 'abcd': \n\t\t{'$literal': 1}}}\n])\n\n// 分组操作\n// 1.去重，如果使用distinct函数返回的是数组\ndb.getCollection('example_data_4').aggregate([{'$group': {'_id': '$name'}}])\n\n// 2．分组并计算统计值,计算最大值、最小值、得分之和和平均分,{$关键字： $已有的字段}\n// 这里引入了四个关键字：“$max”“$min”“$sum”和“$avg”\ndb.getCollection('example_data_4').aggregate([\n\t{'$group': \n\t\t{'_id': '$name',\n\t\t'max_score': {'$max': '$score'},\n\t\t'min_score': {'$min': '$score'},\n\t\t'sum_score': {'$sum': '$score'},\n\t\t'average_score': {'$avg': '$score'}\n\t\t}\n        }\n])\n\n// 3．去重并选择最新或最老的数据\n// 根据不同的统计方法，操作方式可能不止一种\ndb.getCollection('example_data_4').aggregate({\n\t{'$group': {'_id': '$name',\n\t\t'date': {'$last': '$date'},\n\t\t'score': {'$last': '$score'}\n\t\t}\n\t}\n})\n\n// 拆分数组\ndb.getCollection('example_data_3').aggregate({\n\t{'$unwind': '$size'},\n\t{'$unwind': '$price'}\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br")])]),a("h3",{attrs:{id:"联集合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联集合查询"}},[s._v("#")]),s._v(" 联集合查询")]),s._v(" "),a("p",[s._v("关键字："),a("strong",[s._v("$lookup")])]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("主集合.aggregate({\n\t{'$lookup': {\n\t\t'from': '被查集合名',\n\t\t'localField': '主集合的字段',\n\t\t'foreignField': '被查集合的字段',\n\t\t'as': '保存查询结果的字段名'\n\t\t}\n\t}\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("“主集合”与“被查集合”需要搞清楚。如果顺序搞反了，则结果会不同。")]),s._v(" "),a("p",[s._v("实例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 在微博集合中查询用户信息,主集合就是微博集合，被查集合就是用户集合\ndb.getCollection('example_post').aggregate({\n\t{'$lookup': {\n\t\t'from': 'example_user',\n\t\t'localField': 'user_id',\n\t\t'foreignField': 'id',\n\t\t'as': 'user_info'\n\t\t}\n\t}\n})\n\n// 美化输出结果，user_info是数组，拆分一下\n// 1.将用户数组展开\ndb.getCollection('example_post').aggregate({\n\t{'$lookup': {\n\t\t'from': 'example_user',\n\t\t'localField': 'user_id',\n\t\t'foreignField': 'id',\n\t\t'as': 'user_info'\n\t\t}\n\t},\n\t{'$unwind': '$user_info'}\n})\n\n// 2.提取出“name”字段和“work”字段\ndb.getCollection('example_post').aggregate({\n\t{'$lookup': {\n\t\t'from': 'example_user',\n\t\t'localField': 'user_id',\n\t\t'foreignField': 'id',\n\t\t'as': 'user_info'\n\t\t}},\n\t{'$unwind': '$user_info'},\n\t{'$project': {\n\t\t'content': 1,\n\t\t'post_time': 1,\n\t\t'name': '$user_info.name',\n\t\t'work': '$user_info.work'\n\t}}\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br")])]),a("p",[s._v("MongoDB聚合功能的核心思想是：充分里面各个阶段的搭配与协作来提前处理数据，从而充分利用MongoDB的性能来提高查询效率。但是在Python有更加强大、直观易用、易调试、易维护的数据分析库Pandas的情况下，是否还需更加深入的去学习MongoDB的聚合功能，需要读者自行权衡。")]),s._v(" "),a("h3",{attrs:{id:"提高读写性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提高读写性能"}},[s._v("#")]),s._v(" 提高读写性能")]),s._v(" "),a("p",[s._v("批量比逐条插入好，考虑到远程的带宽，可以借助Redis批量插入到MongoDB。")]),s._v(" "),a("p",[s._v("对于必需逐条更新大量数据的情况，也可以使用插入代替更新来提高性能。")]),s._v(" "),a("p",[s._v("使用“索引”提高查询速度：如果不使用索引，则每一次查询数据 MongoDB 都会遍历整个集合；而如果使用了索引，则MongoDB会直接根据索引快速找到需要的内容。")]),s._v(" "),a("p",[s._v("使用Redis，以降低MongoDB的查询频率，从而提高新闻爬虫的爬取效率。Redis还可以帮助去重。")]),s._v(" "),a("p",[s._v("增添适当冗余信息，以提高查询速度。根据已有字段推算出来的，但是对查询性能很有帮助。")]),s._v(" "),a("h3",{attrs:{id:"提高安全性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提高安全性"}},[s._v("#")]),s._v(" 提高安全性")]),s._v(" "),a("p",[s._v("配置权限管理机制：角色、特权和用户")]),s._v(" "),a("ol",[a("li",[s._v("创建管理员用户")]),s._v(" "),a("li",[s._v("创建普通用户")]),s._v(" "),a("li",[s._v("创建能操作数据库的管理员用户，这个要慎重")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 管理员\nuse admin\ndb.createUser({\n\tuser: 'admin',\n\tpwd: 'kingnameisgenius',\n\troles: [{role: 'userAdminAnyDatabase', db: 'admin'}]\n})\nexit\n// 以后使用必须先登录\nmongo -u 'admin' -p 'kingnameisgenius' --authenticationDatabase 'admin'\n\n// 普通用户\nuse chapter\ndb.createUser({\n\tuser: 'kingname',\n\tpwd: 'kingnameisgenius',\n\troles: [{role: 'readWrite', db: 'chapter'},\n\t\t{role: 'read', db: 'capter4'}]\n})\n\n// 能操作数据库的\nuser admin\ndb.createUser({\n\tuser: 'root',\n\tpwd: 'iamsuperuser',\n\troles: ['root']\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("p",[s._v("MongoDB连接：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("一般情况：\nmongodb://用户名：密码@数据库地址：端口/数据库名\n\n// 本地没有权限限制的\nmongodb://localhost\n\n// 本地有账户密码的\nmongodb://kingname:genius@localhost\n\n// 远程有账号密码的\nmongodb://kingname:genius@10.11.212.37\n\n// 远程没有限制但有端口的\nmongodb://10.11.200.100:8001\n\n// 远程，有端口，要密码，有特定数据库\nmongodb://kingname:genius@10.11.111.21:8001/chapter_8\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[a("strong",[s._v("开放外网限制")])]),s._v(" "),a("p",[s._v("修改mongodb.conf")]),s._v(" "),a("p",[a("code",[s._v("bindIp:127.0.0.1")]),s._v(" 改成："),a("code",[s._v("bindIp:0.0.0.0")])]),s._v(" "),a("p",[s._v("最好同时配置防火墙，设定来源的IP访问MongoDB的端口。")]),s._v(" "),a("h2",{attrs:{id:"三、redis快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、redis快速入门"}},[s._v("#")]),s._v(" 三、Redis快速入门")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis下载"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"http://try.redis.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis练习网站"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("apt-get update\napt-get install redis-server\nredis-cli\n// 返回PONG表示成功\nping\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"创建字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建字符串"}},[s._v("#")]),s._v(" 创建字符串")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("set key value\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"查询字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询字符串"}},[s._v("#")]),s._v(" 查询字符串")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// keys不建议使用中文\nkeys *\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"读取字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取字符串"}},[s._v("#")]),s._v(" 读取字符串")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 不存在的key返回(nil)\nget a_word\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"修改key里面的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改key里面的值"}},[s._v("#")]),s._v(" 修改Key里面的值")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('set key 新的值\n// 如果不直接覆盖（有不覆盖，无插入）\nset key value NX\n\n// 在末尾添加\nappend key value\n\n// 有引号需要使用双括号\nset key "word1 word2 word3"\n\n// 加减\n// 加\nincr key\n\n// 减\ndecr key\n\n// 增加n\nincrby key n\n\n// 减少n\ndecrby key n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h3",{attrs:{id:"python中使用reids"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python中使用reids"}},[s._v("#")]),s._v(" Python中使用Reids")]),s._v(" "),a("p",[s._v("安装")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("python3 -m pip install redis\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import redis\nclient = redis.Redis()\n\n// 创建\nclient.set('key', 'value')\n\n// 使用\nclient.get('key')\n\n// 非覆盖插入\n client.set('key', 'value', nx=True)\n \n // 添加在最后\n client.append('key', 'value')\n \n // 增加、减少,第二个参数默认1\n client.incr('number_inc')\n client.decr('number_dec', 10)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("字符串只应用在小量级的数据记录中。如果数据量超过百万级别，那么使用字符串来保存简单的映射关系将会浪费大量内存。此时需要使用Redis的另一种数据结构——Hash。")]),s._v(" "),a("p",[s._v("绝对不应该在不清楚当前有多少Key的情况下冒然列出当前所有的Key**")]),s._v(" "),a("h3",{attrs:{id:"列表的创建、查询和修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表的创建、查询和修改"}},[s._v("#")]),s._v(" 列表的创建、查询和修改")]),s._v(" "),a("p",[s._v("列表是Redis的一种基本数据结构，分左右")]),s._v(" "),a("p",[s._v("越左边的数据，编号越小。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 列表的插入\nlpush key value1 value2 value3\nrpush key value1 value2 value3\n\n// 查看列表长度\nllen key\n\n// 根据索引查看数据，格式是lrange key 开始索引 结束索引（包括）\nlrange example_list 2 5\n\n//查看所有数据\nlrange key 0 -11\n\n// 弹出数据\nlpop key\nrpop key\n\n// 修改数据\nlset key index 新的值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("由于一个列表可以储存几百万条数据，所以，"),a("strong",[s._v("绝对不要冒然列出一个列表里面的所有数据，否则可能导致大量数据输出而瞬间耗尽系统的I/O资源。")])]),s._v(" "),a("p",[s._v("应该是：先查看列表的长度，如确定数据量很小，则列出所有的值；如果数据量很大，则可以使用索引查看头几条数据与末尾几条数据。")]),s._v(" "),a("p",[s._v("Python中列表插入，建议是先把数据放在列表中，然后使用*号，元组的方式导入")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 查看列表长度\nclient.llen(key)\n\n# 获取列表中一定索引范围的数据\nclient.lrange(key， 开始索引，结束索引)\n\n# 从左右侧弹出数据\nclient.lpop(key)\nclient.rop(key)\n\n# 修改数据\nclient.lset(key, index, value)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("应用场景：多台服务器向用户发送短信")]),s._v(" "),a("h3",{attrs:{id:"集合的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的操作"}},[s._v("#")]),s._v(" 集合的操作")]),s._v(" "),a("p",[s._v("集合的数据是不重复的")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 1.插入数据\nsadd key value1 value2 value3\n\n// 2.查询集合中元素的个数\nscard key\n\n// 3.集合中获取数据,如果不填count，则获取1条数据\nspop key count\n\n// 4.获取集合中的所有数据\nsmembers key\n\n// 5.检查是否在集合中\nsismember key value\n\n// 6.删除特定数据\nsrem key value1 value2 value3\n\n// 7.求集合交集\nsinter key1 key2 key3\n\n// 8.集合并集\nsunion key1 key2 key3\n\n// 9.结合差集\nsdiff key1 key2 key3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("smembers命令不会删除数据。但是如果集合里的数据量极大，就应该慎重使用“获取所有数据”，因为这样会导致系统的I/O资源瞬间被耗尽。")]),s._v(" "),a("p",[s._v("在Python中，“spop”关键字没有“count”参数，因此一次只能获取一条数据，不能一次性获取多条数据。如果要一次获取多条数据，则可以使用循环来实现")]),s._v(" "),a("p",[s._v("应用场景：实时统计选课集合的数据")]),s._v(" "),a("p",[s._v("实战内容：")]),s._v(" "),a("ul",[a("li",[s._v("列表裁剪")]),s._v(" "),a("li",[s._v("利用key添加过期时间")]),s._v(" "),a("li",[s._v("检查Key剩余过期时间")])]),s._v(" "),a("h2",{attrs:{id:"四、redis高级应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、redis高级应用"}},[s._v("#")]),s._v(" 四、Redis高级应用")]),s._v(" "),a("h3",{attrs:{id:"哈希表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哈希表"}},[s._v("#")]),s._v(" 哈希表")]),s._v(" "),a("p",[s._v("哈希表（Hash Table）是一种数据结构，它实现了“键-值”（Key-Value）的映射。根据Key就能快速找到 Value。")]),s._v(" "),a("p",[s._v("Redis的一个哈希表里面可以储存约43亿个键值对。")]),s._v(" "),a("p",[s._v("一个哈希表的Key里面可以设置成百上千个键值对。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://instagram-engineering.com/storing-hundreds-of-millions-of-simple-key-value-pairs-in-redis-1091ae80f74c",target:"_blank",rel:"noopener noreferrer"}},[s._v("百万个键值对迁移到哈希表的分享"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("使用：")]),s._v(" "),a("ul",[a("li",[s._v("hset一次只能添加一个键值对")]),s._v(" "),a("li",[s._v("hmset一次可以添加多个键值对")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("client.hset('Key', ’字段名’, ’值’)\nclient.hmset('Key', {’字段名1': ’值1', ’字段名2': ’值2', ’字段名n': ’值n'})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("读取：")]),s._v(" "),a("p",[s._v("hkeys用于获取所有字段的字段名，返回的数据是包含bytes型数据的列表")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("field_names = client.hkeys(’哈希表名’)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("获取，没有的返回None")]),s._v(" "),a("ul",[a("li",[s._v("hget：获取一个字段的值")]),s._v(" "),a("li",[s._v("hmget：一次性获取多个字段的值")]),s._v(" "),a("li",[s._v("hgetall：获取一个哈希表中的所有字段名和值")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("client.hget(’哈希表名’, ’字段名’)\nclient.hmget(’哈希表名’, [’字段名1', ’字段名2', ’字段名n'])\nclient.hgetall(’哈希表名’)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("判断是否存在："),a("code",[s._v("client.hexists(’哈希表名’, ’字段名’)")])]),s._v(" "),a("p",[s._v("查看一个哈希表中有多少个字段: "),a("code",[s._v("client.hlen(’哈希表名’)")])]),s._v(" "),a("h3",{attrs:{id:"发布消息-订阅消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布消息-订阅消息"}},[s._v("#")]),s._v(" 发布消息/订阅消息")]),s._v(" "),a("p",[s._v("Redis的“发布/订阅”模式是一种消息通信模式，实现了一对多的消息实时发布功能。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 发布消息\nclient.publish(’频道名’, ’消息’)\n\n// 订阅频道\nlistener = client.pubsub()\nlistener.subscribe(’频道名1', ’频道名2', ’频道名n')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"有序集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有序集合"}},[s._v("#")]),s._v(" 有序集合")]),s._v(" "),a("p",[s._v("有序集合里面的数据跟集合一样，也是不能重复的，但是每一个元素又关联了一个分数（Score），根据这个分数可以对元素进行排序。分数可以重复。")]),s._v(" "),a("p",[s._v("场景应用：排行榜")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("rank = client.zrevrank('rank', 0, 10000, withscores=True)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",[a("li",[s._v("向有序集合添加数据")]),s._v(" "),a("li",[s._v("修改评分")]),s._v(" "),a("li",[s._v("对有序集合元素基于评分范围进行排序\n"),a("ol",[a("li",[s._v("zrangebyscore根据评分按照从小到大的顺序排序")]),s._v(" "),a("li",[s._v("zrevrangebyscore根据评分按照从大到小的顺序排序")])])]),s._v(" "),a("li",[s._v("对有序集合基于位置进行排序\n"),a("ol",[a("li",[s._v("zrange对评分按照从小到大的顺序排序")]),s._v(" "),a("li",[s._v("zrevrange对评分按照从大到小的顺序排序")])])]),s._v(" "),a("li",[s._v("根据值查询排名，根据值查询评分\n"),a("ol",[a("li",[s._v("zrank,如果值存在，则返回值的排名。排名是从0开始的，评分越小则排名越靠近0，评分最小的值的排名为0")]),s._v(" "),a("li",[s._v("zrevrank,如果值存在，则返回值的排名。排名是从0开始的，评分越大排名越靠近0，评分最大的值的排名为0")])])]),s._v(" "),a("li",[s._v("其他常用方法\n"),a("ol",[a("li",[s._v("zcard： 查询有序集合里面一共有多少个值")]),s._v(" "),a("li",[s._v("zcount：查询在某个评分范围内的值有多少")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 1.两种方法，这两种方式的效果是一样的，但是第1种的值可以使用变量，而第2种的值不能使用变量\nclient.zadd(’有序集合名’， 值1， 评分1， 值2， 评分2， 值n， 评分n)\nclient.zadd(’有序集合’， 值1=评分1， 值2=评分2， 值3=评分3)\n\n// 2\nclient.zincrby(’有序集合名’， 值，改变量)\n\n// 3\nclient.zrangebyscore(’有序集合名’， 评分上限， 评分下限， 结果切片起始位置， 结果数量， withscores=False)\nclient.zrevrangebyscore(’有序集合名’， 评分上限， 评分下限， 结果切片起始位置， 结果数量， withscores=False)\n\n// 4\nclient.zrange(’有序集合名’， 开始位置（含）， 结束位置（含）, desc=False,withscores=False)\nclient.zrevrange(’有序集合名’， 开始位置（含）， 结束位置（含）, withscores=False)\n\n// 5\nclient.zrank(’有序列表名’, ’值’)\nclient.zrevrank(’有序列表名’, ’值’)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"安全管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全管理"}},[s._v("#")]),s._v(" 安全管理")]),s._v(" "),a("p",[s._v("配置文件把“requirepass”这一行注释")]),s._v(" "),a("p",[s._v("“foobared”就是默认密码，可以改成自己的密码")]),s._v(" "),a("p",[s._v("然后重启，连接的时候加上-a参数")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import redis\nclient = redis.Redis(password='密码')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("开放外网访问")])]),s._v(" "),a("p",[s._v("配置中把bind这一行去掉")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("redis-cli –h Redis地址 –p 端口 –a 密码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Python中：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import redisclient = redis.Redis(host='192.163.2.10', port=3129, password='kingnameisgenius')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("禁用危险命令")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("rename-command ...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"五、商业实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、商业实战"}},[s._v("#")]),s._v(" 五、商业实战")]),s._v(" "),a("p",[s._v("功能描述")]),s._v(" "),a("ol",[a("li",[s._v("类似知乎")]),s._v(" "),a("li",[s._v("问题点赞")]),s._v(" "),a("li",[s._v("权限管理：登录注册、文章管理")]),s._v(" "),a("li",[s._v("标签功能")])]),s._v(" "),a("p",[s._v("使用“$inc”操作符实现字段自增自减")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("handler.update_one({'_id'： 问题或答案的ObjectId}, {'$inc': {'vote_up': 1}})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("哈希表来存储session")]),s._v(" "),a("h3",{attrs:{id:"布隆过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[s._v("#")]),s._v(" 布隆过滤器")]),s._v(" "),a("p",[a("strong",[s._v("布隆过滤器是一种基于概率进行验重的数据结构。它的基本原理是：小概率事件不容易同时发生。")])]),s._v(" "),a("p",[s._v("布隆过滤器使用多个哈希函数把同一个字符串转换成多个不同的哈希值，并记录这些哈希值的特征。下次再面对一个字符串时，布隆过滤器再次使用这些哈希函数把这个字符串转换为多个哈希值。如果这些哈希值全部符合原先的那个字符串对应的各个哈希值的特征，则认为这两个字符串是相同的。")]),s._v(" "),a("p",[s._v("哈希算法不是一种加密算法，而是一种不可逆的摘要算法。")]),s._v(" "),a("p",[s._v("Redis内部限制一个字符串最多存储2的32次方个字符")]),s._v(" "),a("p",[a("strong",[s._v("布隆过滤器只能添加数据，不能删除数据。")])]),s._v(" "),a("p",[s._v("应用场景：使用“布隆过滤器”对注册用户进行验重")]),s._v(" "),a("p",[s._v("避免注册重复，使用Redis实现一个简单的分布式锁。")]),s._v(" "),a("h3",{attrs:{id:"查询限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询限制"}},[s._v("#")]),s._v(" 查询限制")]),s._v(" "),a("p",[s._v("PyMongo默认会一次性取101行数据，突破限制：")]),s._v(" "),a("ul",[a("li",[s._v("batch_size")]),s._v(" "),a("li",[s._v("no_cursor_timeout")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import pymongo\nimport time \nhandler = pymongo.MongoClient().chapter_13.test_data\n\nfor data in handler.find().batch_size(85):\n\tprint(f'这一行数据为：{data}')\n\ttime.sleep(7)\n\t\n\ncursor = handler.find(no_cursor_timeout=True)\nfor data in cursor:\n\tprint(f'这一行数据为：{data}')\n\ttime.sleep()\ncursor.close()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"硬盘空间释放"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#硬盘空间释放"}},[s._v("#")]),s._v(" 硬盘空间释放")]),s._v(" "),a("p",[s._v("简单通用的方法")]),s._v(" "),a("ol",[a("li",[s._v("把新的数据写入新的集合中")]),s._v(" "),a("li",[s._v("老数据里需要留下的部分也重新插入新的集合")]),s._v(" "),a("li",[s._v("删除老集合")]),s._v(" "),a("li",[s._v("重建索引")])]),s._v(" "),a("h3",{attrs:{id:"多redis实例-与-单redis实例多数据库-的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多redis实例-与-单redis实例多数据库-的差异"}},[s._v("#")]),s._v(" “多Redis实例”与“单Redis实例多数据库”的差异")]),s._v(" "),a("p",[s._v("运行多个实例：")]),s._v(" "),a("p",[s._v("由于Redis服务的启动命令为：redis-server 配置文件路径所以，只要有多个配置文件，每个配置文件里面保证端口号、日志路径、pid文件路径、数据文件路径不同，就可以通过多次运行此命令来启动多个Redis实例。")]),s._v(" "),a("p",[s._v("单Redis多数据库")]),s._v(" "),a("p",[s._v("一个Redis实例，实际上自带了16个命名空间互相隔离的数据库。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import redis\nclient = redis.Redis(db=2) # 进入编号为“2”的数据库，省略“db”参数表示使用“0”号数据库\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("由于Redis是单线程的数据库，所以，一个实例里的多个数据库的Key可以同名，且互不冲突。但是，一旦其中一个数据库卡住（例如对几百万个Key执行“keys *”命令），那么其他数据库也不能正常使用。一旦对某一个数据库进行了一个比较耗时的操作，那么对其他数据库的操作都会受到影响。一个Redis实例的所有数据库都只能共享CPU的一个核。而如果通过多个配置文件启动多个 Redis 实例，则不会存在这种问题，即使一个实例卡死了，其他的实例仍能正常工作。")]),s._v(" "),a("h3",{attrs:{id:"尽可能为每个key设置过期时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尽可能为每个key设置过期时间"}},[s._v("#")]),s._v(" 尽可能为每个Key设置过期时间")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import redis\nclient = redis.Redis()\nclient.hset('test', 'field', 123)\nclient.expire(test, 100) # 第2个参数表示过期时间，单位为秒\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);